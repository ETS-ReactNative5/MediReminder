{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { confirmReminder, deleteReminder, rescheduleReminder, unconfirmReminder } from \"../api/ReminderApi\";\nimport pillImg from \"../assets/medicationPill.png\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { Feather, FontAwesome, FontAwesome5, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { removeReminder, toTimeString, updateMedicationFE, updateReminder } from \"../shared/Functions\";\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport EditReminder from \"./EditReminder\";\nimport MedicationModal from \"./MedicationModal\";\nimport { Timestamp } from '@firebase/firestore';\nexport default function MedicationItem(_ref) {\n  var navigation = _ref.navigation,\n      reminders = _ref.reminders,\n      setReminders = _ref.setReminders,\n      reminder = _ref.reminder;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var medicationId = reminder.medicationId;\n  var reminderId = reminder.id;\n  var medicationName = reminder.name;\n  var quantity = reminder.quantity;\n  var time = reminder.timestamp;\n  var isConfirmed = reminder.isConfirmed;\n  var isMissed = reminder.isMissed;\n  var note = reminder.note;\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser,\n      medications = _useAuth.medications,\n      setMedications = _useAuth.setMedications;\n\n  var handleClickBack = function handleClickBack() {\n    setOpenModal(false);\n  };\n\n  var handleClickConfirm = function handleClickConfirm() {\n    confirmReminder(currentUser.uid.toString(), reminder.medicationId, reminder.id);\n    var medicationDocument = medications.find(function (item) {\n      return item.id == reminder.medicationId;\n    });\n    medicationDocument.pillsInStock -= quantity;\n    var reminderIdx = medicationDocument.reminders.findIndex(function (item) {\n      return item.id == reminder.id;\n    });\n    var reminderDoc = medicationDocument.reminders[reminderIdx];\n    medicationDocument.reminders[reminderIdx] = _objectSpread(_objectSpread({}, reminderDoc), {}, {\n      isConfirmed: true\n    });\n    setMedications(function (prev) {\n      return [].concat(_toConsumableArray(medications.filter(function (item) {\n        return item.id != reminder.medicationId;\n      })), [_objectSpread({}, medicationDocument)]);\n    });\n    setOpenModal(false);\n  };\n\n  var handleClickUnconfirm = function handleClickUnconfirm() {\n    unconfirmReminder(currentUser.uid.toString(), reminder.medicationId, reminder.id);\n    var medicationDocument = medications.find(function (item) {\n      return item.id == reminder.medicationId;\n    });\n    medicationDocument.pillsInStock += quantity;\n    var reminderIdx = medicationDocument.reminders.findIndex(function (item) {\n      return item.id == reminder.id;\n    });\n    var reminderDoc = medicationDocument.reminders[reminderIdx];\n    medicationDocument.reminders[reminderIdx] = _objectSpread(_objectSpread({}, reminderDoc), {}, {\n      isConfirmed: false\n    });\n    setMedications(function (prev) {\n      return [].concat(_toConsumableArray(medications.filter(function (item) {\n        return item.id != reminder.medicationId;\n      })), [_objectSpread({}, medicationDocument)]);\n    });\n    setOpenModal(false);\n  };\n\n  var handleClickReschedule = function handleClickReschedule() {\n    setIsReschedulingDate(true);\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rescheduleDate = _useState4[0],\n      setRescheduleDate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isReschedulingDate = _useState6[0],\n      setIsReschedulingDate = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isReschedulingTime = _useState8[0],\n      setIsReschedulingTime = _useState8[1];\n\n  var hideRescheduleDatePicker = function hideRescheduleDatePicker() {\n    setOpenModal(false);\n    setIsReschedulingDate(false);\n  };\n\n  var handleConfirmRescheduleDate = function handleConfirmRescheduleDate(day) {\n    setRescheduleDate(day);\n    setIsReschedulingDate(false);\n    setIsReschedulingTime(true);\n  };\n\n  var hideRescheduleTimePicker = function hideRescheduleTimePicker() {\n    setIsReschedulingTime(false);\n    setIsReschedulingDate(true);\n  };\n\n  var handleConfirmRescheduleTime = function handleConfirmRescheduleTime(day) {\n    var newDay = rescheduleDate;\n    newDay.setHours(day.getHours(), day.getMinutes(), 0);\n    rescheduleReminder(currentUser.uid, medicationId, reminderId, newDay);\n    var sort = true;\n    updateReminder(medications, setMedications, reminder.medicationId, reminder.id, {\n      timestamp: newDay\n    }, sort);\n    setIsReschedulingTime(false);\n  };\n\n  var handleClickDeleteReminder = function handleClickDeleteReminder() {\n    deleteReminder(currentUser.uid, medicationId, reminderId);\n    setOpenModal(false);\n    removeReminder(medications, setMedications, reminder.medicationId, reminder.id);\n  };\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isEditing = _useState10[0],\n      setIsEditing = _useState10[1];\n\n  var handleClickEditReminder = function handleClickEditReminder() {\n    console.log('Clicked');\n    setIsEditing(true);\n  };\n\n  var handleClickCheckInformation = function handleClickCheckInformation() {\n    setOpenModal(false);\n    navigation.navigate('Medication');\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.time\n  }, toTimeString(time)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setOpenModal(!openModal);\n    }\n  }, React.createElement(View, {\n    style: styles.contentContainer\n  }, React.createElement(View, {\n    style: {\n      padding: 5\n    }\n  }, React.createElement(Image, {\n    source: pillImg,\n    style: {\n      width: 40,\n      height: 40\n    }\n  })), React.createElement(View, {\n    style: styles.reminderInf\n  }, React.createElement(View, {\n    style: styles.textContainer\n  }, React.createElement(Text, {\n    style: styles.text\n  }, medicationName), React.createElement(Text, null, \"Take \", quantity), note && note.length > 0 ? React.createElement(Text, null, note) : React.createElement(React.Fragment, null)), reminder.isConfirmed ? React.createElement(MaterialIcons, {\n    name: \"check-circle\",\n    color: \"green\",\n    size: 22\n  }) : React.createElement(React.Fragment, null)))), React.createElement(Modal, {\n    visible: openModal,\n    animationType: \"fade\",\n    transparent: true\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setOpenModal(false);\n    }\n  }, React.createElement(View, {\n    style: styles.modal\n  }, React.createElement(View, {\n    style: styles.modalContainer\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Feather, {\n    onPress: function onPress() {\n      return setOpenModal(false);\n    },\n    name: \"x\",\n    color: \"black\",\n    size: 28\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: 100,\n      alignItems: 'center'\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    onPress: handleClickCheckInformation,\n    name: \"information-outline\",\n    size: 20\n  }), React.createElement(MaterialCommunityIcons, {\n    onPress: handleClickEditReminder,\n    name: \"pencil-outline\",\n    size: 20\n  }), React.createElement(MaterialCommunityIcons, {\n    onPress: handleClickDeleteReminder,\n    name: \"trash-can-outline\",\n    size: 20\n  }))), React.createElement(View, {\n    style: styles.modalHeader\n  }, React.createElement(Image, {\n    source: pillImg,\n    style: {\n      maxHeight: 80,\n      maxWidth: 80\n    }\n  }), React.createElement(Text, {\n    style: styles.medicationText\n  }, medicationName)), React.createElement(View, {\n    style: styles.modalContent\n  }, React.createElement(View, {\n    style: styles.modalInf\n  }, React.createElement(FontAwesome, {\n    size: 20,\n    name: \"calendar\"\n  }), React.createElement(Text, {\n    style: styles.medicationInfText\n  }, toTimeString(time), \", \", time.toDateString())), React.createElement(View, {\n    style: styles.modalInf\n  }, React.createElement(FontAwesome5, {\n    size: 20,\n    name: \"file-medical\"\n  }), React.createElement(Text, {\n    style: styles.medicationInfText\n  }, \"Take \", quantity)), React.createElement(View, {\n    style: styles.modalInf\n  }, React.createElement(FontAwesome, {\n    size: 20,\n    name: \"pencil-square-o\"\n  }), React.createElement(Text, {\n    style: styles.medicationInfText\n  }, note))), React.createElement(View, {\n    style: styles.buttonsContainer\n  }, React.createElement(TouchableOpacity, {\n    onPress: isConfirmed ? handleClickUnconfirm : handleClickConfirm,\n    style: styles.modalButton\n  }, React.createElement(MaterialCommunityIcons, {\n    name: isConfirmed ? 'reload' : 'check-circle-outline',\n    size: 28\n  }), React.createElement(Text, null, isConfirmed ? 'Unconfirm' : 'Confirm')), React.createElement(TouchableOpacity, {\n    onPress: handleClickReschedule,\n    style: styles.modalButton\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"alarm\",\n    size: 28\n  }), React.createElement(Text, null, \"Reschedule\")), React.createElement(DateTimePicker, {\n    isVisible: isReschedulingDate,\n    mode: \"date\",\n    onCancel: hideRescheduleDatePicker,\n    onConfirm: handleConfirmRescheduleDate\n  }), React.createElement(DateTimePicker, {\n    isVisible: isReschedulingTime,\n    mode: \"time\",\n    onCancel: hideRescheduleTimePicker,\n    onConfirm: handleConfirmRescheduleTime\n  })))))), React.createElement(Modal, {\n    presentationStyle: \"fullScreen\",\n    visible: isEditing,\n    animationType: \"slide\"\n  }, React.createElement(EditReminder, {\n    setIsEditing: setIsEditing,\n    reminder: reminder\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  contentContainer: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 20,\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20\n  },\n  time: {\n    fontSize: 18,\n    marginLeft: 10,\n    marginBottom: 5\n  },\n  reminderInf: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginHorizontal: 20\n  },\n  textContainer: {},\n  medicationText: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  timeContainer: {\n    backgroundColor: '#23AAE3',\n    flexDirection: 'row',\n    padding: 5,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5\n  },\n  quantity: {\n    fontSize: 20\n  },\n  modal: {\n    backgroundColor: 'rgba(52, 52, 52, 0.8)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '90%',\n    height: '60%',\n    backgroundColor: 'white',\n    justifyContent: 'space-between',\n    borderRadius: 15\n  },\n  medicationInfModal: {\n    backgroundColor: 'beige',\n    marginTop: '50%',\n    marginBottom: '50%',\n    height: '50%',\n    marginHorizontal: 40,\n    borderRadius: 10\n  },\n  modalHeader: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    backgroundColor: '#53cbff',\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15\n  },\n  modalButton: {\n    padding: 15,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalQuantity: {\n    alignSelf: 'center'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#53cbff',\n    padding: 10,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15\n  },\n  modalInf: {\n    flexDirection: 'row',\n    marginVertical: 5,\n    padding: 5\n  },\n  medicationInfText: {\n    fontSize: 16,\n    color: 'black',\n    marginLeft: 15\n  },\n  modalButton: {\n    alignItems: 'center'\n  },\n  modalContent: {\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/components/MedicationItem.js"],"names":["React","useState","confirmReminder","deleteReminder","rescheduleReminder","unconfirmReminder","pillImg","useAuth","Feather","FontAwesome","FontAwesome5","MaterialIcons","MaterialCommunityIcons","removeReminder","toTimeString","updateMedicationFE","updateReminder","DateTimePicker","EditReminder","MedicationModal","Timestamp","MedicationItem","navigation","reminders","setReminders","reminder","openModal","setOpenModal","medicationId","reminderId","id","medicationName","name","quantity","time","timestamp","isConfirmed","isMissed","note","currentUser","medications","setMedications","handleClickBack","handleClickConfirm","uid","toString","medicationDocument","find","item","pillsInStock","reminderIdx","findIndex","reminderDoc","prev","filter","handleClickUnconfirm","handleClickReschedule","setIsReschedulingDate","rescheduleDate","setRescheduleDate","isReschedulingDate","isReschedulingTime","setIsReschedulingTime","hideRescheduleDatePicker","handleConfirmRescheduleDate","day","hideRescheduleTimePicker","handleConfirmRescheduleTime","newDay","setHours","getHours","getMinutes","sort","handleClickDeleteReminder","isEditing","setIsEditing","handleClickEditReminder","console","log","handleClickCheckInformation","navigate","styles","container","contentContainer","padding","width","height","reminderInf","textContainer","text","length","modal","modalContainer","header","flexDirection","justifyContent","alignItems","modalHeader","maxHeight","maxWidth","medicationText","modalContent","modalInf","medicationInfText","toDateString","buttonsContainer","modalButton","StyleSheet","create","backgroundColor","borderRadius","fontSize","marginLeft","marginBottom","flex","marginHorizontal","fontWeight","timeContainer","marginTop","medicationInfModal","borderBottomLeftRadius","borderBottomRightRadius","modalQuantity","alignSelf","borderTopLeftRadius","borderTopRightRadius","marginVertical","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;AAGA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,kBAA1C,EAA8DC,iBAA9D;AACA,OAAOC,OAAP;AACA,SAASC,OAAT;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,YAA9B,EAA4CC,aAA5C,EAA2DC,sBAA3D,QAAwF,oBAAxF;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,kBAAvC,EAA2DC,cAA3D;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,eAAe,SAASC,cAAT,OAAyE;AAAA,MAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,YAAyB,QAAzBA,YAAyB;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAEpF,kBAAkCxB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOyB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,YAAY,GAAGH,QAAQ,CAACG,YAA9B;AACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,EAA5B;AACA,MAAMC,cAAc,GAAGN,QAAQ,CAACO,IAAhC;AACA,MAAMC,QAAQ,GAAGR,QAAQ,CAACQ,QAA1B;AACA,MAAMC,IAAI,GAAGT,QAAQ,CAACU,SAAtB;AACA,MAAMC,WAAW,GAAGX,QAAQ,CAACW,WAA7B;AACA,MAAMC,QAAQ,GAAGZ,QAAQ,CAACY,QAA1B;AACA,MAAMC,IAAI,GAAGb,QAAQ,CAACa,IAAtB;;AAGA,iBAAqD/B,OAAO,EAA5D;AAAA,MAAQgC,WAAR,YAAQA,WAAR;AAAA,MAAqBC,WAArB,YAAqBA,WAArB;AAAA,MAAkCC,cAAlC,YAAkCA,cAAlC;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1Bf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,MAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE7BzC,IAAAA,eAAe,CAACqC,WAAW,CAACK,GAAZ,CAAgBC,QAAhB,EAAD,EAA6BpB,QAAQ,CAACG,YAAtC,EAAoDH,QAAQ,CAACK,EAA7D,CAAf;AAGA,QAAIgB,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,CAAkB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAAClB,EAAL,IAAWL,QAAQ,CAACG,YAAxB;AAAA,KAAtB,CAAzB;AACAkB,IAAAA,kBAAkB,CAACG,YAAnB,IAAmChB,QAAnC;AAEA,QAAIiB,WAAW,GAAGJ,kBAAkB,CAACvB,SAAnB,CAA6B4B,SAA7B,CAAuC,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAAClB,EAAL,IAAWL,QAAQ,CAACK,EAAxB;AAAA,KAA3C,CAAlB;AACA,QAAIsB,WAAW,GAAGN,kBAAkB,CAACvB,SAAnB,CAA6B2B,WAA7B,CAAlB;AACAJ,IAAAA,kBAAkB,CAACvB,SAAnB,CAA6B2B,WAA7B,oCACKE,WADL;AAEEhB,MAAAA,WAAW,EAAE;AAFf;AAKAK,IAAAA,cAAc,CAAC,UAAAY,IAAI;AAAA,0CAAQb,WAAW,CAACc,MAAZ,CAAmB,UAAAN,IAAI;AAAA,eAAIA,IAAI,CAAClB,EAAL,IAAWL,QAAQ,CAACG,YAAxB;AAAA,OAAvB,CAAR,sBAA0EkB,kBAA1E;AAAA,KAAL,CAAd;AAEAnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAlBD;;AAoBA,MAAM4B,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAE/BlD,IAAAA,iBAAiB,CAACkC,WAAW,CAACK,GAAZ,CAAgBC,QAAhB,EAAD,EAA6BpB,QAAQ,CAACG,YAAtC,EAAoDH,QAAQ,CAACK,EAA7D,CAAjB;AAIA,QAAIgB,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,CAAkB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAAClB,EAAL,IAAWL,QAAQ,CAACG,YAAxB;AAAA,KAAtB,CAAzB;AACAkB,IAAAA,kBAAkB,CAACG,YAAnB,IAAmChB,QAAnC;AAEA,QAAIiB,WAAW,GAAGJ,kBAAkB,CAACvB,SAAnB,CAA6B4B,SAA7B,CAAuC,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAAClB,EAAL,IAAWL,QAAQ,CAACK,EAAxB;AAAA,KAA3C,CAAlB;AACA,QAAIsB,WAAW,GAAGN,kBAAkB,CAACvB,SAAnB,CAA6B2B,WAA7B,CAAlB;AACAJ,IAAAA,kBAAkB,CAACvB,SAAnB,CAA6B2B,WAA7B,oCACKE,WADL;AAEEhB,MAAAA,WAAW,EAAE;AAFf;AAKAK,IAAAA,cAAc,CAAC,UAAAY,IAAI;AAAA,0CAAQb,WAAW,CAACc,MAAZ,CAAmB,UAAAN,IAAI;AAAA,eAAIA,IAAI,CAAClB,EAAL,IAAWL,QAAQ,CAACG,YAAxB;AAAA,OAAvB,CAAR,sBAA0EkB,kBAA1E;AAAA,KAAL,CAAd;AAEAnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAnBD;;AAqBA,MAAM6B,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCC,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,mBAA4CxD,QAAQ,EAApD;AAAA;AAAA,MAAOyD,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAoD1D,QAAQ,CAAC,KAAD,CAA5D;AAAA;AAAA,MAAO2D,kBAAP;AAAA,MAA2BH,qBAA3B;;AACA,mBAAoDxD,QAAQ,CAAC,KAAD,CAA5D;AAAA;AAAA,MAAO4D,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrCpC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA8B,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAHD;;AAKA,MAAMO,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,GAAD,EAAS;AAC3CN,IAAAA,iBAAiB,CAACM,GAAD,CAAjB;AAEAR,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAK,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GALD;;AAOA,MAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AAErCJ,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAJD;;AAMA,MAAMU,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACF,GAAD,EAAS;AAC3C,QAAIG,MAAM,GAAGV,cAAb;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBJ,GAAG,CAACK,QAAJ,EAAhB,EAAgCL,GAAG,CAACM,UAAJ,EAAhC,EAAkD,CAAlD;AAEAnE,IAAAA,kBAAkB,CAACmC,WAAW,CAACK,GAAb,EAAkBhB,YAAlB,EAAgCC,UAAhC,EAA4CuC,MAA5C,CAAlB;AAEA,QAAMI,IAAI,GAAG,IAAb;AACAxD,IAAAA,cAAc,CAACwB,WAAD,EAAcC,cAAd,EAA8BhB,QAAQ,CAACG,YAAvC,EAAqDH,QAAQ,CAACK,EAA9D,EAAkE;AAC9EK,MAAAA,SAAS,EAAEiC;AADmE,KAAlE,EAEXI,IAFW,CAAd;AAIAV,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AAED,GAbD;;AAeA,MAAMW,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACtCtE,IAAAA,cAAc,CAACoC,WAAW,CAACK,GAAb,EAAkBhB,YAAlB,EAAgCC,UAAhC,CAAd;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAd,IAAAA,cAAc,CAAC2B,WAAD,EAAcC,cAAd,EAA8BhB,QAAQ,CAACG,YAAvC,EAAqDH,QAAQ,CAACK,EAA9D,CAAd;AAED,GAND;;AAQA,mBAAkC7B,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOyE,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,MAAMI,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;AACxCpD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAL,IAAAA,UAAU,CAAC0D,QAAX,CAAoB,YAApB;AACD,GAHD;;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAAC/C;AAApB,KAA2BpB,YAAY,CAACoB,IAAD,CAAvC,CADJ,EAGI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAM;AAACP,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAAyB;AAA3D,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuD,MAAM,CAACE;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV;AAAb,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAE9E,OADZ;AAEI,IAAA,KAAK,EAAE;AAAC+E,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB;AAFX,IADJ,CADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,KAA2B1D,cAA3B,CADJ,EAEI,oBAAC,IAAD,iBAAYE,QAAZ,CAFJ,EAGKK,IAAI,IAAIA,IAAI,CAACoD,MAAL,GAAc,CAAtB,GAA0B,oBAAC,IAAD,QAAOpD,IAAP,CAA1B,GAAgD,yCAHrD,CADJ,EAOMb,QAAQ,CAACW,WAAT,GAAuB,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,cAApB;AAAmC,IAAA,KAAK,EAAC,OAAzC;AAAiD,IAAA,IAAI,EAAE;AAAvD,IAAvB,GAAsF,yCAP5F,CARJ,CADJ,CAHJ,EAyBF,oBAAC,KAAD;AACC,IAAA,OAAO,EAAEV,SADV;AAEC,IAAA,aAAa,EAAC,MAFf;AAGC,IAAA,WAAW,EAAE;AAHd,KAKQ,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA;AAAnC,KACP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsD,MAAM,CAACU;AAApB,KAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW;AAApB,KACU,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY;AAApB,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE;AAAA,aAAMlE,YAAY,CAAC,KAAD,CAAlB;AAAA,KAAlB;AAA6C,IAAA,IAAI,EAAC,GAAlD;AAAsD,IAAA,KAAK,EAAC,OAA5D;AAAoE,IAAA,IAAI,EAAE;AAA1E,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACmE,MAAAA,aAAa,EAAE,KAAhB;AAAuBC,MAAAA,cAAc,EAAE,eAAvC;AAAwDV,MAAAA,KAAK,EAAE,GAA/D;AAAoEW,MAAAA,UAAU,EAAE;AAAhF;AAAb,KACE,oBAAC,sBAAD;AAAwB,IAAA,OAAO,EAAEjB,2BAAjC;AAA8D,IAAA,IAAI,EAAC,qBAAnE;AAAyF,IAAA,IAAI,EAAE;AAA/F,IADF,EAEE,oBAAC,sBAAD;AAAwB,IAAA,OAAO,EAAEH,uBAAjC;AAA0D,IAAA,IAAI,EAAC,gBAA/D;AAAgF,IAAA,IAAI,EAAE;AAAtF,IAFF,EAGE,oBAAC,sBAAD;AAAwB,IAAA,OAAO,EAAEH,yBAAjC;AAA4D,IAAA,IAAI,EAAC,mBAAjE;AAAqF,IAAA,IAAI,EAAE;AAA3F,IAHF,CAFF,CADV,EAUC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACgB;AAApB,KACC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE3F,OAAf;AAAwB,IAAA,KAAK,EAAE;AAAC4F,MAAAA,SAAS,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AAA/B,IADD,EAEW,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KAAqCrE,cAArC,CAFX,CAVD,EAeU,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkD,MAAM,CAACoB;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB;AAApB,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,KAAwCzF,YAAY,CAACoB,IAAD,CAApD,QAA8DA,IAAI,CAACsE,YAAL,EAA9D,CAFF,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACqB;AAApB,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,EAApB;AAAwB,IAAA,IAAI,EAAC;AAA7B,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,cAA6CtE,QAA7C,CAFF,CANF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgD,MAAM,CAACqB;AAApB,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,KAAwCjE,IAAxC,CAFF,CAXF,CAfV,EAoCC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE2C,MAAM,CAACwB;AAApB,KACW,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAErE,WAAW,GAAGmB,oBAAH,GAA0BZ,kBAAhE;AAAoF,IAAA,KAAK,EAAEsC,MAAM,CAACyB;AAAlG,KACE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAEtE,WAAW,GAAG,QAAH,GAAc,sBADjC;AAEE,IAAA,IAAI,EAAE;AAFR,IADF,EAIE,oBAAC,IAAD,QAAOA,WAAW,GAAG,WAAH,GAAkB,SAApC,CAJF,CADX,EAQW,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEoB,qBAA3B;AAAkD,IAAA,KAAK,EAAEyB,MAAM,CAACyB;AAAhE,KACE,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,IAAI,EAAE;AAA3C,IADF,EAEE,oBAAC,IAAD,qBAFF,CARX,EAaW,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE9C,kBADb;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEG,wBAHZ;AAIE,IAAA,SAAS,EAAEC;AAJb,IAbX,EAoBW,oBAAC,cAAD;AACE,IAAA,SAAS,EAAEH,kBADb;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEK,wBAHZ;AAIE,IAAA,SAAS,EAAEC;AAJb,IApBX,CApCD,CAFD,CADO,CALR,CAzBE,EAsGI,oBAAC,KAAD;AACE,IAAA,iBAAiB,EAAC,YADpB;AAEE,IAAA,OAAO,EAAEO,SAFX;AAGE,IAAA,aAAa,EAAC;AAHhB,KAKE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,QAAQ,EAAElD;AAFZ,IALF,CAtGJ,CADJ;AA2HH;AAID,IAAMwD,MAAM,GAAG0B,UAAU,CAACC,MAAX,CAAkB;AAC7B1B,EAAAA,SAAS,EAAE;AACPE,IAAAA,OAAO,EAAE;AADF,GADkB;AAI7BD,EAAAA,gBAAgB,EAAE;AACdW,IAAAA,aAAa,EAAE,KADD;AAEde,IAAAA,eAAe,EAAE,OAFH;AAIdzB,IAAAA,OAAO,EAAE,EAJK;AAKd0B,IAAAA,YAAY,EAAE,EALA;AASdd,IAAAA,UAAU,EAAC;AATG,GAJW;AAgB7BP,EAAAA,IAAI,EAAE;AACFsB,IAAAA,QAAQ,EAAE;AADR,GAhBuB;AAmB7B7E,EAAAA,IAAI,EAAE;AACF6E,IAAAA,QAAQ,EAAE,EADR;AAGFC,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,YAAY,EAAE;AAJZ,GAnBuB;AAyB7B1B,EAAAA,WAAW,EAAG;AACVO,IAAAA,aAAa,EAAE,KADL;AAEVoB,IAAAA,IAAI,EAAE,CAFI;AAGVnB,IAAAA,cAAc,EAAE,eAHN;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVmB,IAAAA,gBAAgB,EAAE;AALR,GAzBe;AAiC7B3B,EAAAA,aAAa,EAAE,EAjCc;AAoC7BY,EAAAA,cAAc,EAAG;AACbW,IAAAA,QAAQ,EAAE,EADG;AAEbK,IAAAA,UAAU,EAAC;AAFE,GApCY;AAwC7BC,EAAAA,aAAa,EAAG;AACZR,IAAAA,eAAe,EAAE,SADL;AAEZf,IAAAA,aAAa,EAAE,KAFH;AAGZV,IAAAA,OAAO,EAAE,CAHG;AAIZ0B,IAAAA,YAAY,EAAE,EAJF;AAKZf,IAAAA,cAAc,EAAE,QALJ;AAMZC,IAAAA,UAAU,EAAE,QANA;AAOZsB,IAAAA,SAAS,EAAE;AAPC,GAxCa;AAmD7BrF,EAAAA,QAAQ,EAAG;AACP8E,IAAAA,QAAQ,EAAE;AADH,GAnDkB;AAuD/BpB,EAAAA,KAAK,EAAG;AACPkB,IAAAA,eAAe,EAAE,uBADV;AAEPK,IAAAA,IAAI,EAAE,CAFC;AAGPnB,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE;AAJL,GAvDuB;AA6D/BJ,EAAAA,cAAc,EAAE;AACfP,IAAAA,KAAK,EAAE,KADQ;AAEfC,IAAAA,MAAM,EAAE,KAFO;AAGfuB,IAAAA,eAAe,EAAE,OAHF;AAIfd,IAAAA,cAAc,EAAE,eAJD;AAMfe,IAAAA,YAAY,EAAE;AANC,GA7De;AAuE/BS,EAAAA,kBAAkB,EAAE;AACnBV,IAAAA,eAAe,EAAE,OADE;AAEnBS,IAAAA,SAAS,EAAE,KAFQ;AAGnBL,IAAAA,YAAY,EAAE,KAHK;AAInB3B,IAAAA,MAAM,EAAE,KAJW;AAKnB6B,IAAAA,gBAAgB,EAAE,EALC;AAMnBL,IAAAA,YAAY,EAAE;AANK,GAvEW;AA+EhCb,EAAAA,WAAW,EAAE;AAGZiB,IAAAA,IAAI,EAAE,CAHM;AAIVnB,IAAAA,cAAc,EAAE,QAJN;AAKVC,IAAAA,UAAU,EAAE;AALF,GA/EmB;AAsFhCS,EAAAA,gBAAgB,EAAE;AACjBX,IAAAA,aAAa,EAAE,KADE;AAEjBC,IAAAA,cAAc,EAAE,cAFC;AAGfX,IAAAA,OAAO,EAAE,EAHM;AAIfyB,IAAAA,eAAe,EAAE,SAJF;AAKfW,IAAAA,sBAAsB,EAAE,EALT;AAMfC,IAAAA,uBAAuB,EAAE;AANV,GAtFc;AA8FhCf,EAAAA,WAAW,EAAE;AACZtB,IAAAA,OAAO,EAAE,EADG;AAEZ0B,IAAAA,YAAY,EAAE,EAFF;AAIZf,IAAAA,cAAc,EAAE,QAJJ;AAKZC,IAAAA,UAAU,EAAE;AALA,GA9FmB;AAqGhC0B,EAAAA,aAAa,EAAG;AACfC,IAAAA,SAAS,EAAE;AADI,GArGgB;AAyG/B9B,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,cAAc,EAAE,eAFV;AAGNc,IAAAA,eAAe,EAAE,SAHX;AAINzB,IAAAA,OAAO,EAAE,EAJH;AAKNwC,IAAAA,mBAAmB,EAAE,EALf;AAMNC,IAAAA,oBAAoB,EAAE;AANhB,GAzGuB;AAiH/BvB,EAAAA,QAAQ,EAAE;AACRR,IAAAA,aAAa,EAAE,KADP;AAGRgC,IAAAA,cAAc,EAAE,CAHR;AAIR1C,IAAAA,OAAO,EAAE;AAJD,GAjHqB;AAyH/BmB,EAAAA,iBAAiB,EAAE;AACjBQ,IAAAA,QAAQ,EAAE,EADO;AAEjBgB,IAAAA,KAAK,EAAE,OAFU;AAGjBf,IAAAA,UAAU,EAAE;AAHK,GAzHY;AA8H/BN,EAAAA,WAAW,EAAG;AAEZV,IAAAA,UAAU,EAAE;AAFA,GA9HiB;AAkI/BK,EAAAA,YAAY,EAAG;AACbjB,IAAAA,OAAO,EAAE;AADI;AAlIgB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, Keyboard, TouchableWithoutFeedback } from 'react-native';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Modal, Button } from 'react-native'\r\nimport { confirmReminder, deleteReminder, rescheduleReminder, unconfirmReminder } from '../api/ReminderApi';\r\nimport pillImg from '../assets/medicationPill.png';\r\nimport { useAuth } from '../Context/AuthContext';\r\nimport {Feather ,FontAwesome ,FontAwesome5 ,MaterialIcons, MaterialCommunityIcons} from '@expo/vector-icons'\r\nimport { removeReminder, toTimeString, updateMedicationFE, updateReminder } from '../shared/Functions';\r\nimport DateTimePicker from 'react-native-modal-datetime-picker';\r\nimport EditReminder from './EditReminder';\r\nimport MedicationModal from './MedicationModal';\r\nimport { Timestamp } from '@firebase/firestore';\r\nexport default function MedicationItem({navigation, reminders, setReminders, reminder}) {\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const medicationId = reminder.medicationId\r\n    const reminderId = reminder.id\r\n    const medicationName = reminder.name\r\n    const quantity = reminder.quantity\r\n    const time = reminder.timestamp\r\n    const isConfirmed = reminder.isConfirmed\r\n    const isMissed = reminder.isMissed\r\n    const note = reminder.note\r\n\r\n\r\n    const { currentUser, medications, setMedications } = useAuth()\r\n\r\n    const handleClickBack = () => {\r\n        setOpenModal(false)\r\n    }\r\n\r\n    const handleClickConfirm = () => {\r\n        // Update BE\r\n        confirmReminder(currentUser.uid.toString(), reminder.medicationId, reminder.id)\r\n\r\n        // Update FE\r\n        let medicationDocument = medications.find( item => item.id == reminder.medicationId)\r\n        medicationDocument.pillsInStock -= quantity\r\n\r\n        let reminderIdx = medicationDocument.reminders.findIndex(item => item.id == reminder.id)\r\n        let reminderDoc = medicationDocument.reminders[reminderIdx]\r\n        medicationDocument.reminders[reminderIdx] = {\r\n          ...reminderDoc,\r\n          isConfirmed: true\r\n        }\r\n\r\n        setMedications(prev => [...medications.filter(item => item.id != reminder.medicationId), {...medicationDocument} ])\r\n\r\n        setOpenModal(false)\r\n    }\r\n\r\n    const handleClickUnconfirm = () => {\r\n        // Update BE\r\n        unconfirmReminder(currentUser.uid.toString(), reminder.medicationId, reminder.id)\r\n\r\n\r\n        // Update FE\r\n        let medicationDocument = medications.find( item => item.id == reminder.medicationId)\r\n        medicationDocument.pillsInStock += quantity\r\n\r\n        let reminderIdx = medicationDocument.reminders.findIndex(item => item.id == reminder.id)\r\n        let reminderDoc = medicationDocument.reminders[reminderIdx]\r\n        medicationDocument.reminders[reminderIdx] = {\r\n          ...reminderDoc,\r\n          isConfirmed: false\r\n        }\r\n\r\n        setMedications(prev => [...medications.filter(item => item.id != reminder.medicationId), {...medicationDocument} ])\r\n        \r\n        setOpenModal(false)\r\n    }\r\n\r\n    const handleClickReschedule = () => {\r\n      setIsReschedulingDate(true)\r\n    }\r\n\r\n    const [rescheduleDate, setRescheduleDate] = useState()\r\n    const [isReschedulingDate, setIsReschedulingDate] = useState(false)\r\n    const [isReschedulingTime, setIsReschedulingTime] = useState(false)\r\n\r\n    const hideRescheduleDatePicker = () => {\r\n      setOpenModal(false)\r\n      setIsReschedulingDate(false)\r\n    }\r\n\r\n    const handleConfirmRescheduleDate = (day) => {\r\n      setRescheduleDate(day)\r\n\r\n      setIsReschedulingDate(false)\r\n      setIsReschedulingTime(true)\r\n    }\r\n\r\n    const hideRescheduleTimePicker = () => {\r\n\r\n      setIsReschedulingTime(false)\r\n      setIsReschedulingDate(true)\r\n    }\r\n\r\n    const handleConfirmRescheduleTime = (day) => {\r\n      let newDay = rescheduleDate\r\n      newDay.setHours(day.getHours(), day.getMinutes(), 0)\r\n\r\n      rescheduleReminder(currentUser.uid, medicationId, reminderId, newDay)\r\n\r\n      const sort = true\r\n      updateReminder(medications, setMedications, reminder.medicationId, reminder.id, {\r\n        timestamp: newDay\r\n      }, sort)\r\n\r\n      setIsReschedulingTime(false)\r\n      \r\n    }\r\n\r\n    const handleClickDeleteReminder = () => {\r\n      deleteReminder(currentUser.uid, medicationId, reminderId)\r\n      setOpenModal(false)\r\n\r\n      removeReminder(medications, setMedications, reminder.medicationId, reminder.id)\r\n\r\n    }\r\n\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    const handleClickEditReminder = () => {\r\n      console.log('Clicked');\r\n      setIsEditing(true)\r\n    }\r\n\r\n    const handleClickCheckInformation = () => {\r\n      setOpenModal(false)\r\n      navigation.navigate('Medication')\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.time}>{toTimeString(time)}</Text>\r\n\r\n            <TouchableOpacity onPress={() => {setOpenModal(!openModal)}}>\r\n                <View style={styles.contentContainer}>\r\n                    <View style={{padding: 5}}>\r\n                        <Image\r\n                            source={pillImg}\r\n                            style={{width: 40, height: 40}}\r\n                        />\r\n                    </View>\r\n                    \r\n                    <View style={styles.reminderInf}>\r\n                        <View style={styles.textContainer}>\r\n                            <Text style={styles.text}>{medicationName}</Text>\r\n                            <Text>Take {quantity}</Text>\r\n                            {note && note.length > 0 ? <Text>{note}</Text> : <></>}\r\n                        </View>\r\n\r\n                        { reminder.isConfirmed ? <MaterialIcons name='check-circle' color='green' size={22}/> : <></>}\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n            {/* Medication modal */}\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tvisible={openModal}\r\n\t\t\t\t\t\t\tanimationType='fade'\r\n\t\t\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\t\t>\r\n              <TouchableWithoutFeedback onPress={() => setOpenModal(false)}>\r\n\t\t\t\t\t\t\t<View style={styles.modal}>\r\n                {/* <Feather onPress={() => setOpenModal(false)} style={{position: 'absolute', top: 30, left: 20}} name='x' color='white' size={28}/> */}\r\n\t\t\t\t\t\t\t\t<View style={styles.modalContainer}>\r\n                  <View style={styles.header}>\r\n                    <Feather onPress={() => setOpenModal(false)} name='x' color='black' size={28}/>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'space-between', width: 100, alignItems: 'center'}}>\r\n                      <MaterialCommunityIcons onPress={handleClickCheckInformation} name='information-outline' size={20}/>\r\n                      <MaterialCommunityIcons onPress={handleClickEditReminder} name='pencil-outline' size={20}/>\r\n                      <MaterialCommunityIcons onPress={handleClickDeleteReminder} name='trash-can-outline' size={20}/>\r\n                    </View>\r\n                  </View>\r\n\r\n\t\t\t\t\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t\t\t\t\t<Image source={pillImg} style={{maxHeight: 80, maxWidth: 80}}/>\r\n                    <Text style={styles.medicationText}>{medicationName}</Text>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\r\n                  <View style={styles.modalContent}>\r\n                    <View style={styles.modalInf}>\r\n                      <FontAwesome size={20} name='calendar'/>\r\n                      <Text style={styles.medicationInfText}>{toTimeString(time)}, {time.toDateString()}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.modalInf}>\r\n                      <FontAwesome5 size={20} name='file-medical'/>\r\n                      <Text style={styles.medicationInfText}>Take {quantity}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.modalInf}>\r\n                      <FontAwesome size={20} name='pencil-square-o'/>\r\n                      <Text style={styles.medicationInfText}>{note}</Text>\r\n                    </View>\r\n\r\n                    \r\n\r\n                  </View>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<View style={styles.buttonsContainer}>\r\n                    <TouchableOpacity onPress={isConfirmed ? handleClickUnconfirm : handleClickConfirm} style={styles.modalButton}>\r\n                      <MaterialCommunityIcons\r\n                        name={isConfirmed ? 'reload' : 'check-circle-outline' }\r\n                        size={28}/>\r\n                      <Text>{isConfirmed ? 'Unconfirm' :  'Confirm'}</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={handleClickReschedule} style={styles.modalButton}>\r\n                      <MaterialCommunityIcons name='alarm' size={28}/>\r\n                      <Text>Reschedule</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <DateTimePicker\r\n                      isVisible={isReschedulingDate}\r\n                      mode='date'\r\n                      onCancel={hideRescheduleDatePicker}\r\n                      onConfirm={handleConfirmRescheduleDate}\r\n                    />\r\n\r\n                    <DateTimePicker\r\n                      isVisible={isReschedulingTime}\r\n                      mode='time'\r\n                      onCancel={hideRescheduleTimePicker}\r\n                      onConfirm={handleConfirmRescheduleTime}\r\n                    />\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</View>\r\n              </TouchableWithoutFeedback>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n            <Modal\r\n              presentationStyle='fullScreen'\r\n              visible={isEditing}\r\n              animationType='slide'\r\n            >\r\n              <EditReminder\r\n                setIsEditing={setIsEditing}\r\n                reminder={reminder}\r\n                // setRefresh={setRefresh}\r\n              />\r\n            </Modal>\r\n\r\n            {/* <Modal\r\n              visible={openMedicationPlan}\r\n              animationType='slide'\r\n            >\r\n              <MedicationModal medication={medication} setOpenMedication={setOpenMedicationPlan} />\r\n            </Modal> */}\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10\r\n    },\r\n    contentContainer: {\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        // margin: 20,\r\n        padding: 15,\r\n        borderRadius: 20,\r\n        // borderWidth: 2,\r\n        // borderColor: 'tomato',\r\n        // borderStyle: 'solid',\r\n        alignItems:'center',\r\n        // justifyContent: 'space-between'\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n    },\r\n    time: {\r\n        fontSize: 18,\r\n        // fontWeight: 'bold',\r\n        marginLeft: 10,\r\n        marginBottom: 5\r\n    },\r\n    reminderInf : {\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginHorizontal: 20,\r\n\r\n    },\r\n    textContainer: {\r\n        // backgroundColor: 'gray'\r\n    },\r\n    medicationText : {\r\n        fontSize: 24,\r\n        fontWeight:'bold',\r\n    },\r\n    timeContainer : {\r\n        backgroundColor: '#23AAE3',\r\n        flexDirection: 'row',\r\n        padding: 5,\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 5,\r\n        // width: 80\r\n        // backgroundColor: 'yellow'\r\n    },\r\n    quantity : {\r\n        fontSize: 20\r\n    },\r\n\r\n\t\tmodal : {\r\n\t\t\tbackgroundColor: 'rgba(52, 52, 52, 0.8)',\r\n\t\t\tflex: 1,\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\tmodalContainer: {\r\n\t\t\twidth: '90%',\r\n\t\t\theight: '60%',\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t\t// padding: 10,\r\n\t\t\tborderRadius: 15,\r\n      // flex: 1\r\n\t\t\t// alignItems: 'center'\r\n\t\t},\r\n\t\tmedicationInfModal: {\r\n\t\t\tbackgroundColor: 'beige',\r\n\t\t\tmarginTop: '50%',\r\n\t\t\tmarginBottom: '50%',\r\n\t\t\theight: '50%',\r\n\t\t\tmarginHorizontal: 40,\r\n\t\t\tborderRadius: 10,\r\n\t},\r\n\tmodalHeader: {\r\n\t\t// flexDirection: 'column',\r\n    // backgroundColor: 'beige',\r\n\t\tflex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n\t},\r\n\tbuttonsContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-evenly',\r\n    padding: 10,\r\n    backgroundColor: '#53cbff',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15\r\n\t},\r\n\tmodalButton: {\r\n\t\tpadding: 15,\r\n\t\tborderRadius: 10,\r\n\t\t// width: 80,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tmodalQuantity : {\r\n\t\talignSelf: 'center'\r\n\t},\r\n  \r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#53cbff',\r\n    padding: 10,\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15\r\n  },\r\n  modalInf: {\r\n    flexDirection: 'row',\r\n    // alignItems: 'center',\r\n    marginVertical: 5,\r\n    padding: 5,\r\n    // borderWidth: 1\r\n    // justifyContent: 'center'\r\n  },\r\n  medicationInfText: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n    marginLeft: 15\r\n  },\r\n  modalButton : {\r\n    // justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modalContent : {\r\n    padding: 5,\r\n    // backgroundColor: '#53cbff',\r\n    // color: 'white'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}