{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BarHeader from \"../shared/BarHeader\";\nimport pill from \"../assets/medicationPill.png\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useAuth } from \"../Context/AuthContext\";\nimport { collection, getDocs, orderBy, query } from '@firebase/firestore';\nimport { db } from \"../firebase/Config\";\nimport { ListItem } from 'react-native-elements/dist/list/ListItem';\nimport { toTimeString } from \"../shared/Functions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport MedicationModal from \"../components/MedicationModal\";\nexport default function MedicationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser,\n      medications = _useAuth.medications,\n      setMedications = _useAuth.setMedications;\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(BarHeader, {\n    navigation: navigation,\n    header: \"Medications\"\n  }), medications.length > 0 ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: {\n      marginLeft: 10,\n      marginTop: 10\n    }\n  }, \"CURRENTLY TAKING\"), React.createElement(ScrollView, {\n    style: styles.contentContainer\n  }, medications.map(function (medication) {\n    return React.createElement(MedicationPlan, {\n      key: medication.id,\n      medication: medication\n    });\n  }))) : React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  }, React.createElement(Text, null, \"You haven't had any medication plan yet!\"), React.createElement(Text, null, \"Let's add one.\")));\n\n  function MedicationPlan(_ref2) {\n    var medication = _ref2.medication;\n    var name = medication.name;\n    var pillsInStock = medication.pillsInStock;\n    var nextReminder = medication.reminders.find(function (reminder) {\n      return reminder.isConfirmed == false;\n    });\n\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openModal = _useState2[0],\n        setOpenModal = _useState2[1];\n\n    useEffect(function () {\n      console.log(nextReminder);\n    }, []);\n    return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setOpenModal(true);\n      },\n      style: styles.medicationContainer\n    }, React.createElement(Image, {\n      source: pill,\n      style: {\n        width: 60,\n        height: 60\n      }\n    }), React.createElement(View, {\n      style: styles.medicationContent\n    }, React.createElement(View, {\n      style: styles.medicationInf\n    }, React.createElement(Text, {\n      style: styles.medicationName\n    }, name), nextReminder ? React.createElement(Text, null, \"Next: \", nextReminder.timestamp.toDateString(), \" \", toTimeString(nextReminder.timestamp)) : React.createElement(Text, null, \"Completed\"), React.createElement(Text, null, medication.pillsInStock, \" pills left\")), React.createElement(MaterialIcons, {\n      name: \"arrow-right\",\n      size: 20\n    }))), React.createElement(Modal, {\n      visible: openModal\n    }, React.createElement(MedicationModal, {\n      medications: medications,\n      setMedications: setMedications,\n      setOpenModal: setOpenModal,\n      medication: medication\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  contentContainer: {\n    flex: 1,\n    padding: 10,\n    marginBottom: 20\n  },\n  medicationContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#53cbff',\n    padding: 10,\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  medicationContent: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginLeft: 20\n  },\n  medicationInf: {},\n  medicationName: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/screens/MedicationScreen.js"],"names":["React","useEffect","useState","BarHeader","pill","MaterialIcons","ScrollView","useAuth","collection","getDocs","orderBy","query","db","ListItem","toTimeString","MedicationModal","MedicationScreen","navigation","currentUser","medications","setMedications","flex","length","marginLeft","marginTop","styles","contentContainer","map","medication","id","justifyContent","alignItems","MedicationPlan","name","pillsInStock","nextReminder","reminders","find","reminder","isConfirmed","openModal","setOpenModal","console","log","medicationContainer","width","height","medicationContent","medicationInf","medicationName","timestamp","toDateString","StyleSheet","create","padding","marginBottom","flexDirection","backgroundColor","marginVertical","borderRadius","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAGA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,OAAT;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,OAA9B,EAAuCC,KAAvC,QAAoD,qBAApD;AACA,SAASC,EAAT;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,SAASC,YAAT;;AAEA,OAAOC,eAAP;AAIA,eAAe,SAASC,gBAAT,OAAwC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACrD,iBAAqDV,OAAO,EAA5D;AAAA,MAAQW,WAAR,YAAQA,WAAR;AAAA,MAAqBC,WAArB,YAAqBA,WAArB;AAAA,MAAkCC,cAAlC,YAAkCA,cAAlC;;AAgCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP;AAAb,KACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEJ,UAAvB;AAAmC,IAAA,MAAM,EAAC;AAA1C,IADF,EAGEE,WAAW,CAACG,MAAZ,GAAqB,CAArB,GACA,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,EAAb;AAAiBC,MAAAA,SAAS,EAAE;AAA5B;AAAb,wBADF,EAGE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA1B,KACGP,WAAW,CAACQ,GAAZ,CAAgB,UAAAC,UAAU;AAAA,WAAI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,UAAU,CAACC,EAAhC;AAAoC,MAAA,UAAU,EAAED;AAAhD,MAAJ;AAAA,GAA1B,CADH,CAHF,CADA,GASA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,cAAc,EAAE,QAAjB;AAA2BC,MAAAA,UAAU,EAAE,QAAvC;AAAiDV,MAAAA,IAAI,EAAE;AAAvD;AAAb,KACI,oBAAC,IAAD,mDADJ,EAEI,oBAAC,IAAD,yBAFJ,CAZF,CADF;;AAsBA,WAASW,cAAT,QAAsC;AAAA,QAAbJ,UAAa,SAAbA,UAAa;AACpC,QAAMK,IAAI,GAAGL,UAAU,CAACK,IAAxB;AACA,QAAMC,YAAY,GAAGN,UAAU,CAACM,YAAhC;AACA,QAAMC,YAAY,GAAGP,UAAU,CAACQ,SAAX,CAAqBC,IAArB,CAA0B,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,WAAT,IAAwB,KAA5B;AAAA,KAAlC,CAArB;;AAEA,oBAAkCrC,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,QAAOsC,SAAP;AAAA,QAAkBC,YAAlB;;AAEAxC,IAAAA,SAAS,CACP,YAAM;AACJyC,MAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACD,KAHM,EAIR,EAJQ,CAAT;AAMA,WACE,0CACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMM,YAAY,CAAC,IAAD,CAAlB;AAAA,OAA3B;AAAqD,MAAA,KAAK,EAAEhB,MAAM,CAACmB;AAAnE,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAExC,IAAf;AAAqB,MAAA,KAAK,EAAE;AAACyC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB;AAA5B,MADJ,EAGI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEtB,MAAM,CAACuB;AAApB,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvB,MAAM,CAACwB;AAApB,OAAqChB,IAArC,CADF,EAEIE,YAAY,GAAG,oBAAC,IAAD,kBAAaA,YAAY,CAACe,SAAb,CAAuBC,YAAvB,EAAb,OAAqDrC,YAAY,CAACqB,YAAY,CAACe,SAAd,CAAjE,CAAH,GAAuG,oBAAC,IAAD,oBAFvH,EAME,oBAAC,IAAD,QAAOtB,UAAU,CAACM,YAAlB,gBANF,CADF,EAUE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,aAApB;AAAkC,MAAA,IAAI,EAAE;AAAxC,MAVF,CAHJ,CADF,EAkBE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEM;AAAhB,OACE,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAErB,WAA9B;AAA2C,MAAA,cAAc,EAAEC,cAA3D;AAA2E,MAAA,YAAY,EAAEqB,YAAzF;AAAuG,MAAA,UAAU,EAAEb;AAAnH,MADF,CAlBF,CADF;AAwBD;AACF;AAED,IAAMH,MAAM,GAAG2B,UAAU,CAACC,MAAX,CAAkB;AAC/B3B,EAAAA,gBAAgB,EAAE;AAChBL,IAAAA,IAAI,EAAE,CADU;AAEhBiC,IAAAA,OAAO,EAAE,EAFO;AAGhBC,IAAAA,YAAY,EAAE;AAHE,GADa;AAO/BX,EAAAA,mBAAmB,EAAG;AACpBY,IAAAA,aAAa,EAAE,KADK;AAGpBC,IAAAA,eAAe,EAAE,SAHG;AAIpBH,IAAAA,OAAO,EAAE,EAJW;AAKpBI,IAAAA,cAAc,EAAE,EALI;AAMpBC,IAAAA,YAAY,EAAE;AANM,GAPS;AAe/BZ,EAAAA,iBAAiB,EAAG;AAClBS,IAAAA,aAAa,EAAE,KADG;AAElBnC,IAAAA,IAAI,EAAE,CAFY;AAGlBS,IAAAA,cAAc,EAAE,eAHE;AAIlBC,IAAAA,UAAU,EAAE,QAJM;AAKlBR,IAAAA,UAAU,EAAE;AALM,GAfW;AAsB/ByB,EAAAA,aAAa,EAAG,EAtBe;AAyB/BC,EAAAA,cAAc,EAAG;AACfW,IAAAA,UAAU,EAAE;AADG;AAzBc,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Image, StyleSheet, Text, View, TouchableOpacity} from 'react-native'\r\n// import { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport BarHeader from '../shared/BarHeader'\r\nimport pill from '../assets/medicationPill.png'\r\nimport { MaterialIcons } from '@expo/vector-icons'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\nimport { useAuth } from '../Context/AuthContext'\r\nimport { collection, getDocs, orderBy, query } from '@firebase/firestore'\r\nimport { db } from '../firebase/Config'\r\nimport { ListItem } from 'react-native-elements/dist/list/ListItem'\r\nimport { toTimeString } from '../shared/Functions'\r\nimport { Modal } from 'react-native'\r\nimport MedicationModal from '../components/MedicationModal'\r\n\r\n\r\n\r\nexport default function MedicationScreen({navigation}) {\r\n  const { currentUser, medications, setMedications } = useAuth()\r\n\r\n  // const [medications, setMedications] = useState([])\r\n\r\n  // const fetchData = async () => {\r\n  //   setMedications([])\r\n\r\n  //   const medicationsRef = collection(db, 'users', currentUser.uid, 'medications')\r\n  //   const medicationsDocs = await getDocs(medicationsRef)\r\n      \r\n  //   medicationsDocs.docs.map( (medication) => {\r\n  //     const getReminders = async () => {\r\n  //       const remindersRef = query(collection(db, 'users', currentUser.uid, 'medications', medication.id, 'reminders'), orderBy('timestamp'))\r\n  //       const remindersDocs = await getDocs(remindersRef)\r\n        \r\n  //       return {...medication.data(), id: medication.id, reminders: remindersDocs.docs.map(reminder => ({...reminder.data(), id: reminder.id, timestamp: reminder.data().timestamp.toDate()}))}\r\n  //     }\r\n\r\n  //     getReminders()\r\n  //     .then( medication => {\r\n  //       setMedications(prev => [...prev, medication])\r\n  //     }).catch(e => console.log(e))\r\n  //     })\r\n\r\n  // }\r\n\r\n  // useEffect(\r\n  //   () => {\r\n  //     fetchData()\r\n  //   }\r\n  // , [])\r\n\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <BarHeader navigation={navigation} header='Medications'/>\r\n    {\r\n      medications.length > 0 ?\r\n      <>\r\n        <Text style={{marginLeft: 10, marginTop: 10}}>CURRENTLY TAKING</Text>\r\n\r\n        <ScrollView style={styles.contentContainer}>\r\n          {medications.map(medication => <MedicationPlan key={medication.id} medication={medication} />)}\r\n        </ScrollView>\r\n      </>\r\n      :\r\n      <View style={{justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n          <Text>You haven't had any medication plan yet!</Text>\r\n          <Text>Let's add one.</Text>\r\n      </View>\r\n    }\r\n\r\n    </View>\r\n  )\r\n\r\n  function MedicationPlan({medication}) {\r\n    const name = medication.name\r\n    const pillsInStock = medication.pillsInStock\r\n    const nextReminder = medication.reminders.find(reminder => reminder.isConfirmed == false)\r\n  \r\n    const [openModal, setOpenModal] = useState(false)\r\n  \r\n    useEffect(\r\n      () => {\r\n        console.log(nextReminder);\r\n      }\r\n    ,[])\r\n  \r\n    return (\r\n      <>\r\n        <TouchableOpacity onPress={() => setOpenModal(true)} style={styles.medicationContainer}>\r\n            <Image source={pill} style={{width: 60, height: 60}}/>\r\n  \r\n            <View style={styles.medicationContent}>\r\n              <View style={styles.medicationInf}>\r\n                <Text style={styles.medicationName}>{name}</Text>\r\n                { nextReminder ? <Text>Next: {nextReminder.timestamp.toDateString()} {toTimeString(nextReminder.timestamp)}</Text> : <Text>Completed</Text>}\r\n                {/* <Text>Next: {nextReminder.timestamp.toDateString()} {toTimeString(nextReminder.timestamp)}</Text> */}\r\n                {/* <Text>{nextReminder.toLocaleString()}</Text> */}\r\n                {/* <Text>{nextReminder.id}</Text> */}\r\n                <Text>{medication.pillsInStock} pills left</Text>\r\n              </View>\r\n  \r\n              <MaterialIcons name='arrow-right' size={20}/>\r\n            </View>\r\n        </TouchableOpacity>\r\n  \r\n        <Modal visible={openModal}>\r\n          <MedicationModal medications={medications} setMedications={setMedications} setOpenModal={setOpenModal} medication={medication} />\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginBottom: 20\r\n  },\r\n\r\n  medicationContainer : {\r\n    flexDirection: 'row',\r\n    // flex: 1,\r\n    backgroundColor: '#53cbff',\r\n    padding: 10,\r\n    marginVertical: 10,\r\n    borderRadius: 10\r\n  },\r\n  medicationContent : {\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginLeft: 20\r\n  },\r\n  medicationInf : {\r\n\r\n  },\r\n  medicationName : {\r\n    fontWeight: 'bold'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}