{"ast":null,"code":"import React, { useEffect, useRef, useState } from 'react';\nimport { AuthProvider } from \"./Context/AuthContext\";\nimport Program from \"./components/Program\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { db } from \"./firebase/Config\";\nimport { addDoc, collection, doc, getDocs, onSnapshot, orderBy, query, updateDoc, where } from '@firebase/firestore';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { UserProvider } from \"./Context/UserContext\";\nexport default function App() {\n  var nameRef = useRef();\n  return React.createElement(AuthProvider, null, React.createElement(UserProvider, null, React.createElement(Program, null)));\n}","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/App.js"],"names":["React","useEffect","useRef","useState","AuthProvider","Program","db","addDoc","collection","doc","getDocs","onSnapshot","orderBy","query","updateDoc","where","TextInput","UserProvider","App","nameRef"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,YAAT;AACA,OAAOC,OAAP;;;;AAEA,SAASC,EAAT;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,GAA7B,EAAkCC,OAAlC,EAA2CC,UAA3C,EAAuDC,OAAvD,EAAgEC,KAAhE,EAAuEC,SAAvE,EAAkFC,KAAlF,QAA+F,qBAA/F;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,GAAT,GAAe;AAoC5B,MAAMC,OAAO,GAAGjB,MAAM,EAAtB;AAEA,SACE,oBAAC,YAAD,QACE,oBAAC,YAAD,QACE,oBAAC,OAAD,OADF,CADF,CADF;AA0BD","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { AuthProvider } from './Context/AuthContext';\r\nimport Program from './components/Program';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { db } from './firebase/Config';\r\nimport { addDoc, collection, doc, getDocs, onSnapshot, orderBy, query, updateDoc, where } from '@firebase/firestore';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { UserProvider } from './Context/UserContext';\r\n\r\nexport default function App() {\r\n  // const [customers, setCustomers] = useState([])\r\n  // const [a, setA] = useState([])\r\n\r\n  // const updateAge = async (id, newAge) => {\r\n  //     await updateDoc(doc(db, 'customers', id), {\r\n  //       age: newAge.toString()\r\n  //     })\r\n  // }\r\n\r\n  // const customersRef = collection(db, 'customers')\r\n\r\n  // useEffect(\r\n  //   () => {\r\n  //       const q = query(customersRef, orderBy('age'))\r\n  //       const unsub = onSnapshot(q,  (querySnapshot) => {\r\n  //         const list = []\r\n  //         querySnapshot.forEach( doc => {\r\n  //           list.push({...doc.data(), id: doc.id})\r\n  //         })\r\n\r\n  //         setA(list)\r\n  //       })\r\n  //   }\r\n  // , [])\r\n\r\n  // const [name, setName] = useState()\r\n  // const [age, setAge] = useState()\r\n\r\n  // const handleClickSubmit = async () => {\r\n  //     await addDoc(collection(db, 'customers'), {\r\n  //       name: name,\r\n  //       age: age\r\n  //     })\r\n  // }\r\n\r\n  const nameRef = useRef()\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <UserProvider>\r\n        <Program />\r\n      </UserProvider>\r\n    </AuthProvider>\r\n\r\n    // <View style={{flex: 1, justifyContent: 'center', alignItems:'center'}}>\r\n    //   <TextInput ref={nameRef} placeholder='name' keyboardType='ascii-capable'/>\r\n    //   <Button title='Show' onPress={() => console.log(nameRef)} />\r\n    // </View>\r\n\r\n    // <View style={{justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n    //   {a.map( (item, idx) =>\r\n    //    <View key={idx}>\r\n    //      <Text> {item.name} {item.age} </Text>\r\n    //      <Button title='Increment age by 1' onPress={() => updateAge(item.id, parseInt(item.age) + 1)} />\r\n    //      <Button title='Decrement age by 1' onPress={() => updateAge(item.id, parseInt(item.age) - 1)} />\r\n    //    </View>\r\n    //   )}\r\n\r\n    //   <TextInput placeholder='Name' onChangeText={text => setName(text)} />\r\n    //   <TextInput placeholder='Age' onChangeText={text => setAge(text)} />\r\n    //   <Button title='submit' onPress={handleClickSubmit} />\r\n    // </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}