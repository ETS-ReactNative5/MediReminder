{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport Logo from \"../assets/MediReminderLogo.png\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { Link } from \"@react-navigation/native\";\nimport { GlobalStyles } from \"../shared/GlobalStyles\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login,\n      error = _useAuth.error,\n      setError = _useAuth.setError,\n      currentUser = _useAuth.currentUser;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      secure = _useState2[0],\n      setSecure = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordError = _useState10[0],\n      setPasswordError = _useState10[1];\n\n  var handleClick = function handleClick() {\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(login(email, password));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Login error:', _context.t0.message);\n\n          case 9:\n            setLoading(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    if (password.length > 0 && password.length < 6) {\n      setPasswordError('Your password must be at least 6 characters');\n    } else setPasswordError();\n  }, [password]);\n  useEffect(function () {\n    return function () {\n      setSecure(false);\n      setEmail('');\n      setPassword('');\n      setPasswordError('');\n    };\n  }, [currentUser]);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.appIconContainer\n  }, React.createElement(Image, {\n    source: Logo,\n    style: styles.appIcon\n  }), React.createElement(Text, {\n    style: styles.appName\n  }, \" Medireminder \")), React.createElement(View, {\n    style: styles.logInForm\n  }, React.createElement(View, {\n    style: styles.input\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"account-outline\",\n    size: 28\n  }), React.createElement(TextInput, {\n    style: {\n      marginLeft: 15,\n      width: '80%'\n    },\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    onFocus: function onFocus() {\n      return setError();\n    }\n  })), React.createElement(View, {\n    style: styles.input\n  }, React.createElement(Ionicons, {\n    name: \"lock-closed-outline\",\n    size: 28\n  }), React.createElement(TextInput, {\n    secureTextEntry: secure,\n    style: {\n      marginLeft: 15,\n      width: '80%'\n    },\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    onFocus: function onFocus() {\n      return setError();\n    }\n  }), React.createElement(Ionicons, {\n    onPress: function onPress() {\n      return setSecure(!secure);\n    },\n    name: secure ? 'eye-off-outline' : 'eye-outline',\n    size: 20,\n    style: {\n      alignSelf: 'center'\n    }\n  })), passwordError && React.createElement(Text, {\n    style: GlobalStyles.warning\n  }, passwordError), error ? React.createElement(Text, {\n    style: [GlobalStyles.error, {\n      alignSelf: 'center'\n    }]\n  }, error) : React.createElement(React.Fragment, null), React.createElement(TouchableOpacity, {\n    disabled: loading,\n    onPress: handleClick\n  }, React.createElement(View, {\n    style: styles.logInButton\n  }, loading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"black\"\n  }) : React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    }\n  }, \"LOGIN\"))), React.createElement(View, {\n    style: styles.footer\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate('Sign up');\n    },\n    style: {\n      textAlign: 'right'\n    }\n  }, \"Not have an acocunt yet?\"), React.createElement(Text, {\n    onPress: function onPress() {\n      setError();\n      navigation.navigate('Sign up');\n    },\n    style: {\n      color: 'tomato',\n      fontWeight: 'bold'\n    }\n  }, \" Sign up\")))));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#53CBFF'\n  },\n  appIconContainer: {\n    marginTop: '50%',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  appIcon: {\n    width: 80,\n    height: 80\n  },\n  appName: {\n    fontSize: 28,\n    fontWeight: \"bold\"\n  },\n  logInForm: {\n    marginTop: 0,\n    padding: 25\n  },\n  logInButton: {\n    marginTop: 20,\n    borderWidth: 2,\n    borderColor: 'black',\n    height: 40,\n    width: 160,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    backgroundColor: 'white',\n    alignSelf: 'center'\n  },\n  input: {\n    flexDirection: 'row',\n    borderRadius: 90,\n    borderColor: 'black',\n    borderWidth: 2,\n    padding: 14,\n    marginVertical: 10\n  },\n  footer: {\n    marginTop: 5,\n    flexDirection: 'row',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/screens/LogInScreen.js"],"names":["React","useEffect","useState","MaterialIcons","MaterialCommunityIcons","Ionicons","Logo","useAuth","Link","GlobalStyles","LoginScreen","navigation","login","error","setError","currentUser","secure","setSecure","email","setEmail","password","setPassword","loading","setLoading","passwordError","setPasswordError","handleClick","console","log","message","length","Keyboard","dismiss","styles","container","appIconContainer","appIcon","appName","logInForm","input","marginLeft","width","text","alignSelf","warning","logInButton","fontSize","fontWeight","footer","navigate","textAlign","color","StyleSheet","create","flex","backgroundColor","marginTop","flexDirection","alignItems","height","padding","borderWidth","borderColor","justifyContent","borderRadius","marginVertical"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Image, StyleSheet, View, Text, TextInput, Button, TouchableOpacity, TouchableWithoutFeedback, Keyboard, Alert, ActivityIndicator } from \"react-native\";\r\nimport {MaterialIcons} from '@expo/vector-icons';\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport Logo from '../assets/MediReminderLogo.png'\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { GlobalStyles } from \"../shared/GlobalStyles\";\r\n\r\nexport default function LoginScreen({navigation}){\r\n    // const { signIn } = useContext(AuthContext);\r\n    const { login, error, setError, currentUser } = useAuth();\r\n\r\n    const [secure, setSecure] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loading ,setLoading] = useState(false)\r\n    // const [error, setError] = useState()\r\n    const [passwordError, setPasswordError] = useState()\r\n\r\n    const handleClick = async () => {\r\n        // setError()\r\n\r\n        try {\r\n            setLoading(true)\r\n            await login(email, password)\r\n        } catch (e) {\r\n            // setError('Invalid email or password')\r\n            console.log('Login error:', e.message);\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(\r\n      () => {\r\n        if (password.length > 0 && password.length < 6) {\r\n          setPasswordError('Your password must be at least 6 characters')\r\n        } else setPasswordError()\r\n\r\n      }\r\n    , [password])\r\n\r\n    useEffect(\r\n        () => {\r\n            return () => {\r\n                setSecure(false)\r\n                setEmail('')\r\n                setPassword('')\r\n                setPasswordError('')\r\n            }\r\n        }\r\n    , [currentUser])\r\n\r\n    return(   \r\n        <TouchableWithoutFeedback onPress={() => {Keyboard.dismiss()}}>\r\n          <View style={styles.container}>\r\n              {/* Application Icon */}\r\n              <View style={styles.appIconContainer}>\r\n                      <Image source={Logo}\r\n                          style={styles.appIcon}\r\n                      />\r\n                      <Text style={styles.appName}> Medireminder </Text>\r\n              </View>\r\n\r\n                {/* Log in form */}\r\n              <View style={styles.logInForm}>\r\n                <View style={styles.input}>\r\n                  <MaterialCommunityIcons name='account-outline' size={28}/>\r\n                  <TextInput\r\n                    style={{marginLeft: 15, width: '80%'}}\r\n                    placeholder='Email'\r\n                    onChangeText={ text => setEmail(text) }\r\n                    onFocus={() => setError()}\r\n                  />\r\n                </View>\r\n\r\n                <View style={styles.input}>\r\n                  <Ionicons name='lock-closed-outline' size={28}/>\r\n                  <TextInput\r\n                      secureTextEntry={secure}\r\n                      style={{marginLeft: 15, width: '80%'}}\r\n                      placeholder='Password'\r\n                      onChangeText={ text => setPassword(text)}\r\n                      onFocus={() => setError()}\r\n                  />\r\n\r\n                  <Ionicons\r\n                    onPress={() => setSecure(!secure)}\r\n                    name={secure ? 'eye-off-outline' : 'eye-outline'} \r\n                    size={20}\r\n                    style={{alignSelf: 'center'}}\r\n                  />\r\n\t\t\t\t\t\t    </View>\r\n\r\n                {passwordError && <Text style={GlobalStyles.warning}>{passwordError}</Text>}\r\n            \r\n                {error ? <Text style={[GlobalStyles.error, {alignSelf: 'center'}]}>{error}</Text> : <></>}\r\n\r\n                <TouchableOpacity disabled={loading} onPress={handleClick}>\r\n                    <View style={styles.logInButton}>\r\n                        {loading ?\r\n                        <ActivityIndicator size=\"large\" color='black' />\r\n                        :  \r\n                        <Text style={{fontSize: 20, fontWeight: 'bold'}}>LOGIN</Text>\r\n                        }\r\n                        \r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.footer}>\r\n                    <Text\r\n                        onPress={() => navigation.navigate('Sign up')}\r\n                        style={{\r\n                            textAlign: 'right',\r\n                            // fontWeight: 'bold'\r\n                        }}\r\n                    >\r\n                        Not have an acocunt yet? \r\n                    </Text>\r\n                    <Text onPress={() => {setError(); navigation.navigate('Sign up')}} style={{color: 'tomato', fontWeight: 'bold'}}> Sign up</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n)};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#53CBFF',\r\n    },\r\n    appIconContainer: {\r\n        // marginTop: '50%',\r\n        // marginBottom: '100%',\r\n        marginTop: '50%',\r\n        flexDirection: 'column',\r\n        // borderWidth: 3,\r\n        alignItems: 'center'\r\n    },\r\n    appIcon: {\r\n        width: 80,\r\n        height: 80,\r\n    },\r\n    appName: {\r\n        fontSize: 28,\r\n        fontWeight: \"bold\",\r\n    },\r\n    logInForm: {\r\n        // borderWidth: 2,\r\n        marginTop: 0,\r\n        padding: 25,\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center'\r\n    },\r\n    logInButton: {\r\n        marginTop: 20,\r\n        borderWidth: 2,\r\n        borderColor: 'black',\r\n        height: 40,\r\n        width: 160,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        alignSelf: 'center'\r\n    },\r\n    input: {\r\n        flexDirection: 'row',\r\n        // backgroundColor: 'gray'\r\n        borderRadius: 90,\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        padding: 14,\r\n        marginVertical: 10,\r\n        // justifyContent: 'space-between'\r\n    },\r\n    footer : {\r\n        marginTop: 5,\r\n        flexDirection: 'row',\r\n        alignSelf: 'center'\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}