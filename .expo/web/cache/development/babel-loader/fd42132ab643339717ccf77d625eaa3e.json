{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"medication\", \"idx\"];\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { BarChart, PieChart, ProgressChart } from \"react-native-chart-kit\";\nimport BarHeader from \"../shared/BarHeader\";\nimport pill from \"../assets/medicationPill.png\";\nimport { ProgressCircle } from \"react-native-svg-charts\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { collection, getDocs, query, orderBy } from \"@firebase/firestore\";\nimport { db } from \"../firebase/Config\";\nvar screenWidth = Dimensions.get('window').width;\nexport default function RecordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser,\n      medications = _useAuth.medications,\n      setMedications = _useAuth.setMedications;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openOverall = _useState2[0],\n      setOpenOverall = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openDaily = _useState4[0],\n      setOpenDaily = _useState4[1];\n\n  var DailyItem = function DailyItem() {\n    return React.createElement(View, {\n      style: styles.dailyItemContainer\n    }, React.createElement(Text, null, \"12/11/2021\"), React.createElement(View, {\n      style: styles.dailyItem\n    }, React.createElement(Text, null, \"Missed(0)\"), React.createElement(Text, null, \"Taken(3)\"), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n      }\n    }, React.createElement(Image, {\n      source: pill,\n      style: {\n        height: 35,\n        width: 35\n      }\n    }), React.createElement(Text, null, \"Paracetamol(X1)\"), React.createElement(Text, null, \"7:00 AM\"))));\n  };\n\n  var CustomProgressCircle = function CustomProgressCircle(_ref2) {\n    var medication = _ref2.medication,\n        idx = _ref2.idx,\n        rest = _objectWithoutProperties(_ref2, _excluded);\n\n    var progress = (medication.reminders.filter(function (reminder) {\n      return reminder.isConfirmed == true;\n    }).length / medication.reminders.length).toFixed(2);\n    var confirmedReminders = medication.reminders.filter(function (reminder) {\n      return reminder.isConfirmed == true;\n    }).length;\n    var missedReminders = medication.reminders.filter(function (reminder) {\n      return reminder.isMissed == true;\n    }).length;\n    var remainingReminders = medication.reminders.length - (confirmedReminders + missedReminders);\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        flex: 1,\n        borderTopWidth: idx > 0 ? 1 : 0,\n        padding: 10\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, medication.name), React.createElement(ProgressCircle, {\n      style: {\n        height: 150,\n        width: 150,\n        marginTop: 10\n      },\n      progress: Number.parseFloat(progress),\n      progressColor: \"#27E98C\",\n      backgroundColor: \"gray\",\n      startAngle: 0,\n      endAngle: 360,\n      strokeWidth: 8\n    })), React.createElement(View, {\n      style: {\n        backgroundColor: '',\n        marginLeft: 70,\n        alignItems: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, \"Progress\"), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: 'bold'\n      }\n    }, progress * 100, \"%\"))));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(BarHeader, {\n    navigation: navigation,\n    header: 'Records'\n  }), medications.length > 0 ? React.createElement(React.Fragment, null, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, medications.map(function (medication, idx) {\n    return React.createElement(CustomProgressCircle, {\n      idx: idx,\n      key: medication.id,\n      medication: medication\n    });\n  })))) : React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  }, React.createElement(Text, null, \"You haven't had any medication plan yet!\"), React.createElement(Text, null, \"Let's add one.\")));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20\n  },\n  button: {\n    borderBottomColor: 'tomato',\n    borderBottomWidth: 3\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  chartContainer: {\n    borderTopWidth: 1\n  },\n  dailyItemContainer: {\n    padding: 10\n  },\n  dailyItem: {\n    backgroundColor: '#53cbff',\n    padding: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/screens/RecordScreen.js"],"names":["React","useState","useEffect","BarChart","PieChart","ProgressChart","BarHeader","pill","ProgressCircle","useAuth","collection","getDocs","query","orderBy","db","screenWidth","Dimensions","get","width","RecordScreen","navigation","currentUser","medications","setMedications","openOverall","setOpenOverall","openDaily","setOpenDaily","DailyItem","styles","dailyItemContainer","dailyItem","flexDirection","justifyContent","height","CustomProgressCircle","medication","idx","rest","progress","reminders","filter","reminder","isConfirmed","length","toFixed","confirmedReminders","missedReminders","isMissed","remainingReminders","flex","borderTopWidth","padding","alignItems","fontWeight","name","marginTop","Number","parseFloat","backgroundColor","marginLeft","fontSize","container","map","id","StyleSheet","create","paddingHorizontal","button","borderBottomColor","borderBottomWidth","buttonText","chartContainer","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, ScrollView, Image, ImageBackground } from \"react-native\";\r\nimport { BarChart, PieChart, ProgressChart } from \"react-native-chart-kit\";\r\nimport BarHeader from \"../shared/BarHeader\";\r\nimport pill from '../assets/medicationPill.png'\r\nimport { ProgressCircle } from \"react-native-svg-charts\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { collection, getDocs, query, orderBy } from \"@firebase/firestore\";\r\nimport { db } from \"../firebase/Config\";\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nexport default function RecordScreen({navigation}){\r\n  const { currentUser, medications, setMedications } = useAuth()\r\n\r\n  // const [medications, setMedications] = useState([])\r\n\r\n  // const fetchData = async () => {\r\n  //   setMedications([])\r\n\r\n  //   const medicationsRef = collection(db, 'users', currentUser.uid, 'medications')\r\n  //   const medicationsDocs = await getDocs(medicationsRef)\r\n      \r\n  //   medicationsDocs.docs.map( (medication) => {\r\n  //     const getReminders = async () => {\r\n  //       const remindersRef = query(collection(db, 'users', currentUser.uid, 'medications', medication.id, 'reminders'), orderBy('timestamp'))\r\n  //       const remindersDocs = await getDocs(remindersRef)\r\n        \r\n  //       return {...medication.data(), id: medication.id, reminders: remindersDocs.docs.map(reminder => ({...reminder.data(), id: reminder.id, timestamp: reminder.data().timestamp.toDate()}))}\r\n  //     }\r\n\r\n  //     getReminders()\r\n  //     .then( medication => {\r\n  //       setMedications(prev => [...prev, medication])\r\n  //     }).catch(e => console.log(e))\r\n  //     })\r\n\r\n  // }\r\n\r\n  // useEffect(\r\n  //   () => {\r\n  //     fetchData()\r\n  //   }\r\n  // , [])\r\n\r\n    const [openOverall, setOpenOverall] = useState(true);\r\n    const [openDaily, setOpenDaily] = useState(false);\r\n\r\n    const DailyItem = () => {\r\n      return (\r\n        <View style={styles.dailyItemContainer}>\r\n          <Text>12/11/2021</Text>\r\n          \r\n          <View style={styles.dailyItem}>\r\n            <Text>Missed(0)</Text>\r\n            <Text>Taken(3)</Text>\r\n            <View style={{flexDirection: 'row', justifyContent:'space-evenly'}}>\r\n              <Image source={pill} style={{height: 35, width: 35}} />\r\n              <Text>Paracetamol(X1)</Text>\r\n              <Text>7:00 AM</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\n    const CustomProgressCircle = ({medication, idx, ...rest}) => {\r\n      const progress = (medication.reminders.filter(reminder => {return reminder.isConfirmed == true}).length / medication.reminders.length).toFixed(2)\r\n      const confirmedReminders = medication.reminders.filter(reminder => reminder.isConfirmed == true).length\r\n      const missedReminders = medication.reminders.filter(reminder => reminder.isMissed == true).length\r\n      const remainingReminders = medication.reminders.length - (confirmedReminders + missedReminders)\r\n\r\n      return (\r\n        <View style={{\r\n          flexDirection: 'row',\r\n          flex: 1,\r\n          borderTopWidth: idx > 0 ? 1 : 0,\r\n          // borderBottomWidth: 1,\r\n          padding: 10\r\n        }}>\r\n          <View style={{alignItems: 'center'}}>\r\n            <Text style={{fontWeight: 'bold'}}>{medication.name}</Text>\r\n            <ProgressCircle\r\n              style={{ height: 150, width: 150, marginTop: 10}}\r\n              // progress={ 0.75 }\r\n              progress={Number.parseFloat(progress)}\r\n              progressColor='#27E98C'\r\n              backgroundColor='gray'\r\n              startAngle={0}\r\n              endAngle={360}\r\n              strokeWidth={8}\r\n            />\r\n          </View>\r\n\r\n\r\n          <View style={{backgroundColor: '', marginLeft: 70, alignItems: 'center'}}>\r\n            <Text style={{fontWeight: 'bold'}}>Progress</Text>  \r\n            \r\n            <View style={{flex: 1, flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\r\n              <Text style={{fontSize: 20, fontWeight: 'bold'}}>{progress * 100}%</Text>\r\n              {/* <Text>{confirmedReminders}</Text> */}\r\n              {/* <Text>{missedReminders}</Text> */}\r\n              {/* <Text>{remainingReminders}</Text> */}\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <View style={{flex: 1}}>\r\n        <BarHeader navigation={navigation} header={'Records'}/>\r\n        {medications.length > 0 ? \r\n          <>\r\n            <ScrollView>\r\n              <View style={styles.container}>\r\n                {/* <View style={{flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', padding: 10}}>\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            setOpenOverall(true);\r\n                            setOpenDaily(false);\r\n                        }}\r\n                        style={{borderBottomColor: openOverall ? 'tomato' : 'gray', borderBottomWidth: 3}}\r\n                    >\r\n                        <Text style={styles.buttonText}>Overall</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            setOpenOverall(false);\r\n                            setOpenDaily(true);\r\n                        }}\r\n                        style={{borderBottomColor: openDaily ? 'tomato' : 'gray', borderBottomWidth: 3}}\r\n                    >\r\n                        <Text style={styles.buttonText}>Daily</Text>\r\n                    </TouchableOpacity>\r\n                </View>            \r\n\r\n                {openOverall && medications.map( medication => <CustomProgressCircle key={medication.id} medication={medication}/>)}\r\n                {openDaily} */}\r\n\r\n                {medications.map( (medication, idx) => <CustomProgressCircle idx={idx} key={medication.id} medication={medication}/>)}\r\n            </View>\r\n            </ScrollView>\r\n          </>  \r\n          :\r\n          <View style={{justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n            <Text>You haven't had any medication plan yet!</Text>\r\n            <Text>Let's add one.</Text>\r\n          </View>\r\n        }\r\n\r\n      </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      paddingHorizontal: 20\r\n    },\r\n    button: {\r\n        // backgroundColor: 'gray',\r\n        borderBottomColor: 'tomato',\r\n        borderBottomWidth: 3\r\n    },  \r\n    buttonText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    chartContainer: {\r\n      // borderBottomWidth: 1,\r\n      borderTopWidth: 1,\r\n    },\r\n    dailyItemContainer: {\r\n      padding: 10\r\n    },\r\n    dailyItem: {\r\n      backgroundColor: '#53cbff',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}