{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { BarChart, PieChart, ProgressChart } from \"react-native-chart-kit\";\nimport BarHeader from \"../shared/BarHeader\";\nimport pill from \"../assets/medicationPill.png\";\nimport { ProgressCircle } from \"react-native-svg-charts\";\nvar screenWidth = Dimensions.get('window').width;\nexport default function RecordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      openOverall = _useState2[0],\n      setOpenOverall = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openDaily = _useState4[0],\n      setOpenDaily = _useState4[1];\n\n  var MedicationProgress = function MedicationProgress(_ref2) {\n    var name = _ref2.name;\n    var chartConfig = {\n      backgroundGradientFrom: \"red\",\n      backgroundGradientFromOpacity: 0.5,\n      backgroundGradientTo: \"white\",\n      backgroundGradientToOpacity: 1,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(30, 20, 100, \" + opacity + \")\";\n      },\n      strokeWidth: 2,\n      barPercentage: 0.5,\n      useShadowColorFromDataset: false\n    };\n    var data = [{\n      name: \"Taken\",\n      population: 16,\n      color: \"#27E98C\",\n      legendFontColor: \"black\",\n      legendFontSize: 15\n    }, {\n      name: \"Missed\",\n      population: 4,\n      color: \"#FF9696\",\n      legendFontColor: \"black\",\n      legendFontSize: 15\n    }, {\n      name: \"Left\",\n      population: 10,\n      color: '#8D8A8A',\n      legendFontColor: 'black',\n      legendFontSize: 15\n    }];\n    var PRdata = {\n      labels: [\"Taken\", \"Missed\"],\n      data: [0.4, 0.1]\n    };\n    return React.createElement(View, {\n      style: styles.chartContainer\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n      }\n    }, React.createElement(Text, null, \"Medication A\"), React.createElement(Text, null, \"In progress\")), React.createElement(PieChart, {\n      data: data,\n      width: screenWidth,\n      height: 200,\n      chartConfig: chartConfig,\n      accessor: \"population\",\n      backgroundColor: \"transparent\",\n      paddingLeft: \"15\",\n      absolute: true\n    }));\n  };\n\n  var OverallMode = function OverallMode() {\n    useEffect(function () {\n      console.log(screenWidth);\n      return function () {};\n    }, []);\n    return React.createElement(View, {\n      style: {\n        margin: 10\n      }\n    }, React.createElement(CustomProgressCircle, null), React.createElement(CustomProgressCircle, null), React.createElement(CustomProgressCircle, null), React.createElement(CustomProgressCircle, null), React.createElement(CustomProgressCircle, null), React.createElement(CustomProgressCircle, null));\n  };\n\n  var DailyItem = function DailyItem() {\n    return React.createElement(View, {\n      style: styles.dailyItemContainer\n    }, React.createElement(Text, null, \"12/11/2021\"), React.createElement(View, {\n      style: styles.dailyItem\n    }, React.createElement(Text, null, \"Missed(0)\"), React.createElement(Text, null, \"Taken(3)\"), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly'\n      }\n    }, React.createElement(Image, {\n      source: pill,\n      style: {\n        height: 35,\n        width: 35\n      }\n    }), React.createElement(Text, null, \"Paracetamol(X1)\"), React.createElement(Text, null, \"7:00 AM\"))));\n  };\n\n  var DailyMode = function DailyMode() {\n    return React.createElement(ScrollView, null, React.createElement(DailyItem, null), React.createElement(DailyItem, null), React.createElement(DailyItem, null), React.createElement(DailyItem, null), React.createElement(DailyItem, null), React.createElement(DailyItem, null), React.createElement(DailyItem, null), React.createElement(DailyItem, null));\n  };\n\n  var CustomProgressCircle = function CustomProgressCircle(_ref3) {\n    var rest = _extends({}, _ref3);\n\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        flex: 1,\n        borderTopWidth: 1,\n        padding: 10\n      }\n    }, React.createElement(View, {\n      style: {\n        alignItems: 'center'\n      }\n    }, React.createElement(Text, null, \"Medication A\"), React.createElement(ProgressCircle, {\n      style: {\n        height: 150,\n        width: 150,\n        marginTop: 10\n      },\n      progress: 0.75,\n      progressColor: \"#27E98C\",\n      backgroundColor: \"gray\",\n      startAngle: 0,\n      endAngle: 360,\n      strokeWidth: 8\n    })), React.createElement(View, {\n      style: {\n        backgroundColor: '',\n        marginLeft: 70,\n        alignItems: 'center'\n      }\n    }, React.createElement(Text, null, \"Progress\"), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: 'bold'\n      }\n    }, \"75%\"))));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(BarHeader, {\n    navigation: navigation,\n    header: 'Records'\n  }), React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      alignItems: 'center',\n      padding: 10\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setOpenOverall(true);\n      setOpenDaily(false);\n    },\n    style: {\n      borderBottomColor: openOverall ? 'tomato' : 'gray',\n      borderBottomWidth: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Overall\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setOpenOverall(false);\n      setOpenDaily(true);\n    },\n    style: {\n      borderBottomColor: openDaily ? 'tomato' : 'gray',\n      borderBottomWidth: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Daily\"))), openOverall && React.createElement(OverallMode, null), openDaily && React.createElement(DailyMode, null))));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20\n  },\n  button: {\n    borderBottomColor: 'tomato',\n    borderBottomWidth: 3\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  chartContainer: {\n    borderTopWidth: 1\n  },\n  dailyItemContainer: {\n    padding: 10\n  },\n  dailyItem: {\n    backgroundColor: '#53cbff',\n    padding: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/screens/RecordScreen.js"],"names":["React","useState","useEffect","BarChart","PieChart","ProgressChart","BarHeader","pill","ProgressCircle","screenWidth","Dimensions","get","width","RecordScreen","navigation","openOverall","setOpenOverall","openDaily","setOpenDaily","MedicationProgress","name","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","color","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","data","population","legendFontColor","legendFontSize","PRdata","labels","styles","chartContainer","flexDirection","justifyContent","OverallMode","console","log","margin","DailyItem","dailyItemContainer","dailyItem","height","DailyMode","CustomProgressCircle","rest","flex","borderTopWidth","padding","alignItems","marginTop","backgroundColor","marginLeft","fontSize","fontWeight","container","borderBottomColor","borderBottomWidth","buttonText","StyleSheet","create","paddingHorizontal","button","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Dimensions, ScrollView, Image, ImageBackground } from \"react-native\";\r\nimport { BarChart, PieChart, ProgressChart } from \"react-native-chart-kit\";\r\nimport BarHeader from \"../shared/BarHeader\";\r\nimport pill from '../assets/medicationPill.png'\r\nimport { ProgressCircle } from \"react-native-svg-charts\";\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nexport default function RecordScreen({navigation}){\r\n    const [openOverall, setOpenOverall] = useState(true);\r\n    const [openDaily, setOpenDaily] = useState(false);\r\n\r\n    const MedicationProgress = ({name}) => {\r\n        const chartConfig = {\r\n            backgroundGradientFrom: \"red\",\r\n            backgroundGradientFromOpacity: 0.5,\r\n            backgroundGradientTo: \"white\",\r\n            backgroundGradientToOpacity: 1,\r\n            color: (opacity = 1) => `rgba(30, 20, 100, ${opacity})`,\r\n            // color: 'beige',\r\n            strokeWidth: 2, // optional, default 3\r\n            barPercentage: 0.5,\r\n            useShadowColorFromDataset: false // optional\r\n          };\r\n\r\n          const data = [\r\n            {\r\n              name: \"Taken\",\r\n              population: 16,\r\n              color: \"#27E98C\",\r\n              legendFontColor: \"black\",\r\n              legendFontSize: 15\r\n            },\r\n            {\r\n              name: \"Missed\",\r\n              population: 4,\r\n              color: \"#FF9696\",\r\n              legendFontColor: \"black\",\r\n              legendFontSize: 15\r\n            },\r\n            {\r\n              name: \"Left\",\r\n              population: 10,\r\n              color: '#8D8A8A',\r\n              legendFontColor: 'black',\r\n              legendFontSize: 15\r\n            }\r\n          ];\r\n\r\n          const PRdata = {\r\n            labels: [\"Taken\", \"Missed\"], // optional\r\n            data: [0.4, 0.1]\r\n          };\r\n\r\n        \r\n        return (\r\n            <View style={styles.chartContainer}>\r\n              <View style={{flexDirection: 'row', justifyContent:'space-evenly'}}>\r\n                <Text>Medication A</Text>\r\n                <Text>In progress</Text>\r\n              </View>              \r\n\r\n              <PieChart\r\n              data={data}\r\n              width={screenWidth}\r\n              height={200}\r\n              chartConfig={chartConfig}\r\n              accessor={\"population\"}\r\n              backgroundColor={\"transparent\"}\r\n              paddingLeft={\"15\"}\r\n              // center={[10, 50]}\r\n              absolute\r\n              />\r\n                        \r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n    const OverallMode = () => {\r\n        useEffect(() => {\r\n            console.log(screenWidth);\r\n\r\n            return () => {\r\n\r\n            }\r\n        }, [])\r\n\r\n\r\n        return (\r\n            <View style={{margin: 10}}>\r\n              {/* <ImageBackground source={ <CustomProgressCircle/> } style={{width: 100, height: 100}} /> */}\r\n              <CustomProgressCircle />\r\n              <CustomProgressCircle />\r\n              <CustomProgressCircle />\r\n              <CustomProgressCircle />\r\n              <CustomProgressCircle />\r\n              <CustomProgressCircle />\r\n\r\n                {/* <MedicationProgress />\r\n                <MedicationProgress />\r\n                <MedicationProgress />\r\n                <MedicationProgress />\r\n                <MedicationProgress />\r\n                <MedicationProgress /> */}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const DailyItem = () => {\r\n      return (\r\n        <View style={styles.dailyItemContainer}>\r\n          <Text>12/11/2021</Text>\r\n          \r\n          <View style={styles.dailyItem}>\r\n            <Text>Missed(0)</Text>\r\n            <Text>Taken(3)</Text>\r\n            <View style={{flexDirection: 'row', justifyContent:'space-evenly'}}>\r\n              <Image source={pill} style={{height: 35, width: 35}} />\r\n              <Text>Paracetamol(X1)</Text>\r\n              <Text>7:00 AM</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\n    const DailyMode = () => {\r\n        return (\r\n            <ScrollView> \r\n                <DailyItem />\r\n                <DailyItem />\r\n                <DailyItem />\r\n                <DailyItem />\r\n                <DailyItem />\r\n                <DailyItem />\r\n                <DailyItem />\r\n                <DailyItem />\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n    const CustomProgressCircle = ({...rest}) => {\r\n\r\n      return (\r\n        <View style={{\r\n          flexDirection: 'row',\r\n          flex: 1,\r\n          borderTopWidth: 1,\r\n          // borderBottomWidth: 1,\r\n          padding: 10\r\n        }}>\r\n          <View style={{alignItems: 'center'}}>\r\n            <Text>Medication A</Text>\r\n            <ProgressCircle\r\n              style={{ height: 150, width: 150, marginTop: 10}}\r\n              progress={ 0.75 }\r\n              progressColor='#27E98C'\r\n              backgroundColor='gray'\r\n              startAngle={0}\r\n              endAngle={360}\r\n              strokeWidth={8}\r\n            />\r\n          </View>\r\n\r\n\r\n          <View style={{backgroundColor: '', marginLeft: 70, alignItems: 'center'}}>\r\n            <Text>Progress</Text>  \r\n            \r\n            <View style={{flex: 1, flexDirection: 'row', alignItems: 'center'}}>\r\n              <Text style={{fontSize: 20, fontWeight: 'bold'}}>75%</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <View style={{flex: 1}}>\r\n            <BarHeader navigation={navigation} header={'Records'}/>\r\n            <ScrollView>\r\n              <View style={styles.container}>\r\n                  <View style={{flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', padding: 10}}>\r\n                      <TouchableOpacity\r\n                          onPress={() => {\r\n                              setOpenOverall(true);\r\n                              setOpenDaily(false);\r\n                          }}\r\n                          style={{borderBottomColor: openOverall ? 'tomato' : 'gray', borderBottomWidth: 3}}\r\n                      >\r\n                          <Text style={styles.buttonText}>Overall</Text>\r\n                      </TouchableOpacity>\r\n\r\n                      <TouchableOpacity\r\n                          onPress={() => {\r\n                              setOpenOverall(false);\r\n                              setOpenDaily(true);\r\n                          }}\r\n                          style={{borderBottomColor: openDaily ? 'tomato' : 'gray', borderBottomWidth: 3}}\r\n                      >\r\n                          <Text style={styles.buttonText}>Daily</Text>\r\n                      </TouchableOpacity>\r\n                  </View>            \r\n\r\n                  {openOverall && <OverallMode />}\r\n                  {openDaily && <DailyMode />}\r\n              </View>\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      paddingHorizontal: 20\r\n    },\r\n    button: {\r\n        // backgroundColor: 'gray',\r\n        borderBottomColor: 'tomato',\r\n        borderBottomWidth: 3\r\n    },  \r\n    buttonText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    chartContainer: {\r\n      // borderBottomWidth: 1,\r\n      borderTopWidth: 1,\r\n    },\r\n    dailyItemContainer: {\r\n      padding: 10\r\n    },\r\n    dailyItem: {\r\n      backgroundColor: '#53cbff',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}