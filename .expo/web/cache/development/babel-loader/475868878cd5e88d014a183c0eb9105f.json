{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"@firebase/auth\";\nimport { useState, useReducer, useContext, useEffect, createContext } from \"react\";\nimport React from \"react\";\nimport { auth, db } from \"../firebase/Config\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { query, orderBy, addDoc, collection, doc, getDoc, getDocs, serverTimestamp, setDoc, Timestamp, updateDoc } from \"@firebase/firestore\";\nvar AuthContext = createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var usersRef = collection(db, 'users');\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userDoc = _useState2[0],\n      setUserDoc = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      medications = _useState10[0],\n      setMedications = _useState10[1];\n\n  var fetchData = function fetchData(user) {\n    var medicationsRef, medicationsDocs;\n    return _regeneratorRuntime.async(function fetchData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setMedications(function (prev) {\n              return [];\n            });\n            medicationsRef = collection(db, 'users', user.uid, 'medications');\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getDocs(medicationsRef));\n\n          case 4:\n            medicationsDocs = _context2.sent;\n            medicationsDocs.docs.map(function (medication) {\n              var getReminders = function getReminders() {\n                var remindersRef, remindersDocs;\n                return _regeneratorRuntime.async(function getReminders$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        remindersRef = query(collection(db, 'users', user.uid, 'medications', medication.id, 'reminders'), orderBy('timestamp'));\n                        _context.next = 3;\n                        return _regeneratorRuntime.awrap(getDocs(remindersRef));\n\n                      case 3:\n                        remindersDocs = _context.sent;\n                        return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, medication.data()), {}, {\n                          id: medication.id,\n                          reminders: remindersDocs.docs.map(function (reminder) {\n                            return _objectSpread(_objectSpread({}, reminder.data()), {}, {\n                              id: reminder.id,\n                              timestamp: reminder.data().timestamp.toDate()\n                            });\n                          })\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              };\n\n              getReminders().then(function (medication) {\n                setMedications(function (prev) {\n                  return [].concat(_toConsumableArray(prev), [medication]);\n                });\n              }).catch(function (e) {\n                return console.log(e);\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function login(email, password) {\n    return _regeneratorRuntime.async(function login$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('Login runs');\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n              var userInf = userCredentials.user;\n              console.log('Login then runs');\n              fetchData(userInf);\n            }).catch(function (error) {\n              setError('Invalid email/password');\n              console.log('Error in signing in', error.message);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signup(email, password, confirmedPassword) {\n    return _regeneratorRuntime.async(function signup$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n              var user = userCredentials.user;\n\n              var createAccount = function createAccount() {\n                return _regeneratorRuntime.async(function createAccount$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return _regeneratorRuntime.awrap(setDoc(doc(db, 'users', user.uid.toString()), {\n                          account: {\n                            email: email,\n                            createdAt: serverTimestamp()\n                          }\n                        }));\n\n                      case 2:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              };\n\n              var initializeProfile = function initializeProfile() {\n                var userDocRef, defaultInfo;\n                return _regeneratorRuntime.async(function initializeProfile$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        userDocRef = doc(db, 'users', user.uid);\n                        defaultInfo = {\n                          avatar: '',\n                          name: user.uid.toString(),\n                          gender: 'none',\n                          birthday: Timestamp.fromDate(new Date()),\n                          phoneNumber: '',\n                          bio: ''\n                        };\n                        _context5.prev = 2;\n                        _context5.next = 5;\n                        return _regeneratorRuntime.awrap(updateDoc(userDocRef, {\n                          info: defaultInfo\n                        }));\n\n                      case 5:\n                        _context5.next = 10;\n                        break;\n\n                      case 7:\n                        _context5.prev = 7;\n                        _context5.t0 = _context5[\"catch\"](2);\n                        console.log('Error in initializing profile:', _context5.t0.message);\n\n                      case 10:\n                        console.log('Initializing profile successfully');\n\n                      case 11:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, null, null, [[2, 7]], Promise);\n              };\n\n              createAccount();\n              initializeProfile();\n              console.log('Signup runs');\n            }).catch(function (error) {\n              if (email.length == 0 || !email.includes('@')) setError('Invalid email');else if (password.length == 0 || confirmedPassword == 0) setError('Password must be at least 6 characters');else if (password != confirmedPassword) setError('Different password and confirm password');else setError('Already used email');\n              console.log('Error in signing up a new user', error.message);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signout() {\n    signOut(auth);\n  }\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      info = _useState12[0],\n      setInfo = _useState12[1];\n\n  useEffect(function () {\n    try {\n      var unsubcribe = onAuthStateChanged(auth, function (user) {\n        console.log('onAuthStateChanged runs');\n        setCurrentUser(user);\n        setLoading(false);\n      });\n    } catch (e) {\n      console.log('Error in auth state changed:', e.message);\n    }\n  }, []);\n  useEffect(function () {\n    return function () {\n      setInfo();\n      setCurrentUser(), setMedications(), setError();\n    };\n  }, []);\n  var value = {\n    currentUser: currentUser,\n    userDoc: userDoc,\n    info: info,\n    error: error,\n    medications: medications,\n    login: login,\n    signup: signup,\n    signout: signout,\n    setError: setError,\n    setMedications: setMedications\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: value\n  }, !loading && children);\n}","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/Context/AuthContext.js"],"names":["signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","useState","useReducer","useContext","useEffect","createContext","React","auth","db","query","orderBy","addDoc","collection","doc","getDoc","getDocs","serverTimestamp","setDoc","Timestamp","updateDoc","AuthContext","useAuth","AuthProvider","children","usersRef","userDoc","setUserDoc","currentUser","setCurrentUser","loading","setLoading","error","setError","medications","setMedications","fetchData","user","prev","medicationsRef","uid","medicationsDocs","docs","map","medication","getReminders","remindersRef","id","remindersDocs","data","reminders","reminder","timestamp","toDate","then","catch","e","console","log","login","email","password","userCredentials","userInf","message","signup","confirmedPassword","createAccount","toString","account","createdAt","initializeProfile","userDocRef","defaultInfo","avatar","name","gender","birthday","fromDate","Date","phoneNumber","bio","info","length","includes","signout","setInfo","unsubcribe","value"],"mappings":";;;;;;;;;AAAA,SAASA,0BAAT,EAAqCC,8BAArC,EAAqEC,OAArE,EAA8EC,kBAA9E,QAAwG,gBAAxG;AACA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,aAArD,QAA0E,OAA1E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,EAAf;;AAEA,SAAQC,KAAR,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,UAAhC,EAA4CC,GAA5C,EAAiDC,MAAjD,EAAyDC,OAAzD,EAAkEC,eAAlE,EAAmFC,MAAnF,EAA2FC,SAA3F,EAAsGC,SAAtG,QAAuH,qBAAvH;AACA,IAAMC,WAAW,GAAGf,aAAa,EAAjC;AAEA,OAAO,SAASgB,OAAT,GAAmB;AACtB,SAAOlB,UAAU,CAACiB,WAAD,CAAjB;AACH;AAED,OAAO,SAASE,YAAT,OAAkC;AAAA,MAAXC,QAAW,QAAXA,QAAW;AAErC,MAAMC,QAAQ,GAAGZ,UAAU,CAACJ,EAAD,EAAK,OAAL,CAA3B;;AACA,kBAA8BP,QAAQ,EAAtC;AAAA;AAAA,MAAOwB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,mBAAqCzB,QAAQ,CAAC,IAAD,CAA7C;AAAA;AAAA,MAAO0B,WAAP;AAAA,MAAmBC,cAAnB;;AACA,mBAA8B3B,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAO4B,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,mBAA0B7B,QAAQ,EAAlC;AAAA;AAAA,MAAO8B,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAAsC/B,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOgC,WAAP;AAAA,MAAoBC,cAApB;;AA4BA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBF,YAAAA,cAAc,CAAC,UAAAG,IAAI;AAAA,qBAAI,EAAJ;AAAA,aAAL,CAAd;AAEMC,YAAAA,cAHU,GAGO1B,UAAU,CAACJ,EAAD,EAAK,OAAL,EAAc4B,IAAI,CAACG,GAAnB,EAAwB,aAAxB,CAHjB;AAAA;AAAA,6CAIcxB,OAAO,CAACuB,cAAD,CAJrB;;AAAA;AAIVE,YAAAA,eAJU;AAMhBA,YAAAA,eAAe,CAACC,IAAhB,CAAqBC,GAArB,CAA0B,UAACC,UAAD,EAAgB;AACxC,kBAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,wBAAAA,YADa,GACEpC,KAAK,CAACG,UAAU,CAACJ,EAAD,EAAK,OAAL,EAAc4B,IAAI,CAACG,GAAnB,EAAwB,aAAxB,EAAuCI,UAAU,CAACG,EAAlD,EAAsD,WAAtD,CAAX,EAA+EpC,OAAO,CAAC,WAAD,CAAtF,CADP;AAAA;AAAA,yDAESK,OAAO,CAAC8B,YAAD,CAFhB;;AAAA;AAEbE,wBAAAA,aAFa;AAAA,yFAIRJ,UAAU,CAACK,IAAX,EAJQ;AAIWF,0BAAAA,EAAE,EAAEH,UAAU,CAACG,EAJ1B;AAI8BG,0BAAAA,SAAS,EAAEF,aAAa,CAACN,IAAd,CAAmBC,GAAnB,CAAuB,UAAAQ,QAAQ;AAAA,mEAASA,QAAQ,CAACF,IAAT,EAAT;AAA0BF,8BAAAA,EAAE,EAAEI,QAAQ,CAACJ,EAAvC;AAA2CK,8BAAAA,SAAS,EAAED,QAAQ,CAACF,IAAT,GAAgBG,SAAhB,CAA0BC,MAA1B;AAAtD;AAAA,2BAA/B;AAJzC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAArB;;AAOAR,cAAAA,YAAY,GACXS,IADD,CACO,UAAAV,UAAU,EAAI;AACnBT,gBAAAA,cAAc,CAAC,UAAAG,IAAI;AAAA,sDAAQA,IAAR,IAAcM,UAAd;AAAA,iBAAL,CAAd;AACD,eAHD,EAGGW,KAHH,CAGS,UAAAC,CAAC;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,eAHV;AAIC,aAZH;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAsBA,WAAeG,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAEIJ,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAFJ;AAAA,6CAGU5D,0BAA0B,CAACU,IAAD,EAAOoD,KAAP,EAAcC,QAAd,CAA1B,CACLP,IADK,CACC,UAAAQ,eAAe,EAAG;AACvB,kBAAMC,OAAO,GAAGD,eAAe,CAACzB,IAAhC;AACAoB,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEEtB,cAAAA,SAAS,CAAC2B,OAAD,CAAT;AAEH,aAPK,EAQLR,KARK,CAQC,UAAAvB,KAAK,EAAI;AACdC,cAAAA,QAAQ,CAAC,wBAAD,CAAR;AAEAwB,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC1B,KAAK,CAACgC,OAAzC;AACD,aAZK,CAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,WAAeC,MAAf,CAAsBL,KAAtB,EAA6BC,QAA7B,EAAuCK,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACcnE,8BAA8B,CAACS,IAAD,EAAOoD,KAAP,EAAcC,QAAd,CAA9B,CACLP,IADK,CACC,UAAAQ,eAAe,EAAI;AACxB,kBAAMzB,IAAI,GAAGyB,eAAe,CAACzB,IAA7B;;AAEA,kBAAM8B,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACdjD,MAAM,CAACJ,GAAG,CAACL,EAAD,EAAK,OAAL,EAAc4B,IAAI,CAACG,GAAL,CAAS4B,QAAT,EAAd,CAAJ,EAAwC;AAClDC,0BAAAA,OAAO,EAAG;AACRT,4BAAAA,KAAK,EAAEA,KADC;AAERU,4BAAAA,SAAS,EAAErD,eAAe;AAFlB;AADwC,yBAAxC,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB;;AASA,kBAAMsD,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,wBAAAA,UADkB,GACL1D,GAAG,CAACL,EAAD,EAAK,OAAL,EAAc4B,IAAI,CAACG,GAAnB,CADE;AAKdiC,wBAAAA,WALc,GAKA;AAChBC,0BAAAA,MAAM,EAAE,EADQ;AAEhBC,0BAAAA,IAAI,EAAEtC,IAAI,CAACG,GAAL,CAAS4B,QAAT,EAFU;AAGhBQ,0BAAAA,MAAM,EAAE,MAHQ;AAIhBC,0BAAAA,QAAQ,EAAE1D,SAAS,CAAC2D,QAAV,CAAmB,IAAIC,IAAJ,EAAnB,CAJM;AAKhBC,0BAAAA,WAAW,EAAE,EALG;AAMhBC,0BAAAA,GAAG,EAAE;AANW,yBALA;AAAA;AAAA;AAAA,yDAeV7D,SAAS,CAACoD,UAAD,EAAa;AAACU,0BAAAA,IAAI,EAAET;AAAP,yBAAb,CAfC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBhBhB,wBAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,aAAMM,OAApD;;AAjBgB;AAsBpBP,wBAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AAtBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1B;;AAyBAS,cAAAA,aAAa;AACbI,cAAAA,iBAAiB;AAEnBd,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACC,aA1CK,EA2CLH,KA3CK,CA2CE,UAAAvB,KAAK,EAAI;AACf,kBAAI4B,KAAK,CAACuB,MAAN,IAAgB,CAAhB,IAAqB,CAACvB,KAAK,CAACwB,QAAN,CAAe,GAAf,CAA1B,EAA+CnD,QAAQ,CAAC,eAAD,CAAR,CAA/C,KACK,IAAI4B,QAAQ,CAACsB,MAAT,IAAmB,CAAnB,IAAwBjB,iBAAiB,IAAI,CAAjD,EAAoDjC,QAAQ,CAAC,wCAAD,CAAR,CAApD,KACA,IAAI4B,QAAQ,IAAIK,iBAAhB,EAAmCjC,QAAQ,CAAC,yCAAD,CAAR,CAAnC,KACAA,QAAQ,CAAC,oBAAD,CAAR;AAELwB,cAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C1B,KAAK,CAACgC,OAApD;AACD,aAlDK,CADd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsDA,WAASqB,OAAT,GAAmB;AACfrF,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACH;;AAED,oBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOgF,IAAP;AAAA,MAAaI,OAAb;;AAEAjF,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI;AACF,UAAMkF,UAAU,GAAGtF,kBAAkB,CAACO,IAAD,EAAO,UAAA6B,IAAI,EAAI;AAClDoB,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA7B,QAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJoC,CAArC;AAOD,KARD,CAQE,OAAOyB,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,CAAC,CAACQ,OAA9C;AACD;AACJ,GAZQ,EAYN,EAZM,CAAT;AAcA3D,EAAAA,SAAS,CACP,YAAM;AACJ,WAAO,YAAM;AACXiF,MAAAA,OAAO;AACPzD,MAAAA,cAAc,IACdM,cAAc,EADA,EAEdF,QAAQ,EAFR;AAGD,KALD;AAMD,GARM,EASP,EATO,CAAT;AAYA,MAAMuD,KAAK,GAAG;AAEV5D,IAAAA,WAAW,EAAXA,WAFU;AAGVF,IAAAA,OAAO,EAAPA,OAHU;AAIVwD,IAAAA,IAAI,EAAJA,IAJU;AAKVlD,IAAAA,KAAK,EAALA,KALU;AAMVE,IAAAA,WAAW,EAAXA,WANU;AAQVyB,IAAAA,KAAK,EAALA,KARU;AASVM,IAAAA,MAAM,EAANA,MATU;AAUVoB,IAAAA,OAAO,EAAPA,OAVU;AAWVpD,IAAAA,QAAQ,EAARA,QAXU;AAYVE,IAAAA,cAAc,EAAdA;AAZU,GAAd;AAeA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqD;AAA7B,KACK,CAAC1D,OAAD,IAAYN,QADjB,CADJ;AAKH","sourcesContent":["import { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"@firebase/auth\";\r\nimport {useState, useReducer, useContext, useEffect, createContext } from \"react\";\r\nimport React from \"react\";\r\nimport { auth, db } from \"../firebase/Config\";\r\nimport { Alert } from \"react-native\";\r\nimport {query, orderBy, addDoc, collection, doc, getDoc, getDocs, serverTimestamp, setDoc, Timestamp, updateDoc } from \"@firebase/firestore\";\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const usersRef = collection(db, 'users')\r\n    const [userDoc, setUserDoc] = useState()\r\n\r\n    const [currentUser,setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [error, setError] = useState()\r\n\r\n    const [medications, setMedications] = useState([])\r\n\r\n    // useEffect(\r\n    //   () => {\r\n    //     fetchData()\r\n    //     console.log('Medications at AuthContext:', medications);\r\n    //   }\r\n    // , [currentUser])\r\n\r\n    // const fetchData = async (user) => {\r\n    //   const medicationsRef = collection(db, 'users', user.uid, 'medications')\r\n    //   const medicationsDocs = await getDocs(medicationsRef)\r\n\r\n    //   setMedications(medicationsDocs.docs.map( (medication) => {\r\n    //     const getReminders = async () => {\r\n    //       const remindersRef = collection(db, 'users', user.uid, 'medications', medication.id, 'reminders')\r\n    //       const remindersDocs = await getDocs(remindersRef)\r\n          \r\n    //       return remindersDocs.docs.map(reminder => ({...reminder.data(), id: reminder.id}))\r\n    //     }\r\n\r\n    //     // return {...medication.data(), id: medication.id, reminders: reminders}\r\n    //     return {...medication.data(), id: medication.id}\r\n    //     })\r\n    //   )\r\n  \r\n    // }\r\n\r\n    const fetchData = async (user) => {\r\n      setMedications(prev => [])\r\n  \r\n      const medicationsRef = collection(db, 'users', user.uid, 'medications')\r\n      const medicationsDocs = await getDocs(medicationsRef)\r\n        \r\n      medicationsDocs.docs.map( (medication) => {\r\n        const getReminders = async () => {\r\n          const remindersRef = query(collection(db, 'users', user.uid, 'medications', medication.id, 'reminders'), orderBy('timestamp'))\r\n          const remindersDocs = await getDocs(remindersRef)\r\n          \r\n          return {...medication.data(), id: medication.id, reminders: remindersDocs.docs.map(reminder => ({...reminder.data(), id: reminder.id, timestamp: reminder.data().timestamp.toDate()}))}\r\n        }\r\n        \r\n        getReminders()\r\n        .then( medication => {\r\n          setMedications(prev => [...prev, medication])\r\n        }).catch(e => console.log(e))\r\n        })\r\n  \r\n    }\r\n\r\n    async function login(email, password) {\r\n        // setError()\r\n        console.log('Login runs');\r\n        await signInWithEmailAndPassword(auth, email, password)\r\n        .then( userCredentials =>{\r\n          const userInf = userCredentials.user;\r\n          console.log('Login then runs');\r\n            // setCurrentUser(userInf)\r\n            fetchData(userInf)\r\n            // console.log('Signup runs');\r\n        })\r\n        .catch(error => {\r\n          setError('Invalid email/password')\r\n          // Alert.alert('Error', 'Invalid email/password.')\r\n          console.log('Error in signing in', error.message);\r\n        })\r\n    }\r\n\r\n    async function signup(email, password, confirmedPassword) {\r\n            await createUserWithEmailAndPassword(auth, email, password)\r\n            .then( userCredentials => {\r\n              const user = userCredentials.user\r\n\r\n              const createAccount = async () => {\r\n                await setDoc(doc(db, 'users', user.uid.toString()), {\r\n                  account : {\r\n                    email: email,\r\n                    createdAt: serverTimestamp()\r\n                  }\r\n                })\r\n              }\r\n              \r\n              const initializeProfile = async () => {\r\n                const userDocRef = doc(db, 'users', user.uid)\r\n                // const userDoc = await getDoc(userDoc)\r\n                // const profile = user.data().info\r\n\r\n                    const defaultInfo = {\r\n                        avatar: '',\r\n                        name: user.uid.toString(),\r\n                        gender: 'none',\r\n                        birthday: Timestamp.fromDate(new Date()),\r\n                        phoneNumber: '',\r\n                        bio: ''\r\n                    }\r\n\r\n                    try {\r\n                        await updateDoc(userDocRef, {info: defaultInfo})\r\n                    } catch (error) {\r\n                        console.log('Error in initializing profile:', error.message);\r\n                    }\r\n\r\n                    // setInfo(new Info())\r\n\r\n                    console.log('Initializing profile successfully');\r\n            }\r\n\r\n              createAccount()\r\n              initializeProfile()\r\n\r\n            console.log('Signup runs');\r\n            })\r\n            .catch (error => {\r\n              if (email.length == 0 || !email.includes('@')) setError('Invalid email')\r\n              else if (password.length == 0 || confirmedPassword == 0) setError('Password must be at least 6 characters') \r\n              else if (password != confirmedPassword) setError('Different password and confirm password')\r\n              else setError('Already used email')\r\n\r\n              console.log('Error in signing up a new user', error.message);\r\n            })\r\n    }\r\n\r\n    function signout() {\r\n        signOut(auth)\r\n    }\r\n\r\n    const [info, setInfo] = useState({})\r\n\r\n    useEffect(() => {\r\n        try {\r\n          const unsubcribe = onAuthStateChanged(auth, user => {\r\n            console.log('onAuthStateChanged runs');\r\n            setCurrentUser(user)\r\n            setLoading(false);\r\n          })\r\n\r\n          // return unsubcriber\r\n        } catch (e) {\r\n          console.log('Error in auth state changed:', e.message);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(\r\n      () => {\r\n        return () => {\r\n          setInfo()\r\n          setCurrentUser(),\r\n          setMedications(),\r\n          setError()\r\n        }\r\n      }\r\n    , [])\r\n\r\n\r\n    const value = {\r\n        // state,\r\n        currentUser,\r\n        userDoc,\r\n        info,\r\n        error,\r\n        medications,\r\n\r\n        login,\r\n        signup,\r\n        signout,\r\n        setError,\r\n        setMedications\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}