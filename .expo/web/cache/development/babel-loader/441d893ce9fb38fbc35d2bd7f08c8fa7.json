{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { collection, deleteDoc, doc, getDoc, getDocs, increment, Timestamp, updateDoc } from '@firebase/firestore';\nimport React from 'react';\nimport { db } from \"../firebase/Config\";\nexport var drecrementPillsInStock = function drecrementPillsInStock(userId, medicationId, amount) {\n  var medicationDocRef, medicationDoc;\n  return _regeneratorRuntime.async(function drecrementPillsInStock$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          medicationDocRef = doc(db, 'users', userId, 'medications', medicationId);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getDoc(medicationDocRef));\n\n        case 3:\n          medicationDoc = _context.sent;\n          _context.prev = 4;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(updateDoc(medicationDocRef, {\n            pillsInStock: medicationDoc.data().pillsInStock - amount\n          }));\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](4);\n          console.log('Error in decremeting field pillsInStock in a medication:', _context.t0.message);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 9]], Promise);\n};\nexport var incrementPillsInStock = function incrementPillsInStock(userId, medicationId, amount) {\n  var medicationDocRef, medicationDoc;\n  return _regeneratorRuntime.async(function incrementPillsInStock$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          medicationDocRef = doc(db, 'users', userId, 'medications', medicationId);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getDoc(medicationDocRef));\n\n        case 3:\n          medicationDoc = _context2.sent;\n          _context2.prev = 4;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(updateDoc(medicationDocRef, {\n            pillsInStock: medicationDoc.data().pillsInStock + amount\n          }));\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](4);\n          console.log('Error in decremeting field pillsInStock in a medication:', _context2.t0.message);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[4, 9]], Promise);\n};\nexport var updatePillsInStock = function updatePillsInStock(userId, medicationId, quantity) {\n  var medicationDocRef;\n  return _regeneratorRuntime.async(function updatePillsInStock$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          medicationDocRef = doc(db, 'users', userId, 'medications', medicationId);\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(medicationDocRef, {\n            pillsInStock: quantity\n          }));\n\n        case 4:\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log('Error in decremeting field pillsInStock in a medication:', _context3.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var confirmReminder = function confirmReminder(userId, medicationId, reminderId) {\n  var reminderDocRef, reminderDoc;\n  return _regeneratorRuntime.async(function confirmReminder$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId);\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(reminderDocRef, {\n            isConfirmed: true\n          }));\n\n        case 4:\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('Error in updating field isConfirmed in a reminder:', _context4.t0.message);\n\n        case 9:\n          _context4.next = 11;\n          return _regeneratorRuntime.awrap(getDoc(reminderDocRef));\n\n        case 11:\n          reminderDoc = _context4.sent;\n          drecrementPillsInStock(userId, medicationId, reminderDoc.data().quantity);\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var unconfirmReminder = function unconfirmReminder(userId, medicationId, reminderId) {\n  var reminderDocRef, reminderDoc;\n  return _regeneratorRuntime.async(function unconfirmReminder$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId);\n          _context5.prev = 1;\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(reminderDocRef, {\n            isConfirmed: false\n          }));\n\n        case 4:\n          _context5.next = 9;\n          break;\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](1);\n          console.log('Error in updating field isConfirmed in a reminder:', _context5.t0.message);\n\n        case 9:\n          _context5.next = 11;\n          return _regeneratorRuntime.awrap(getDoc(reminderDocRef));\n\n        case 11:\n          reminderDoc = _context5.sent;\n          incrementPillsInStock(userId, medicationId, reminderDoc.data().quantity);\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var deleteReminder = function deleteReminder(userId, medicationId, reminderId) {\n  var reminderDocRef, remindersRef, remindersDocRef;\n  return _regeneratorRuntime.async(function deleteReminder$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId);\n          _context6.prev = 1;\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(deleteDoc(reminderDocRef));\n\n        case 4:\n          _context6.next = 9;\n          break;\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log('Error in deleteing a reminder:', _context6.t0.message);\n\n        case 9:\n          remindersRef = collection(db, 'users', userId, 'medications', medicationId, 'reminders');\n          _context6.next = 12;\n          return _regeneratorRuntime.awrap(getDocs(remindersRef));\n\n        case 12:\n          remindersDocRef = _context6.sent;\n\n          if (remindersDocRef.empty) {\n            console.log('No reminder exist in this medication plan');\n            deleteMedicationPlan(userId, medicationId);\n          } else {\n            console.log(remindersDocRef.size);\n            console.log('There are some reminders in this medication plan');\n          }\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var rescheduleReminder = function rescheduleReminder(userId, medicationId, reminderId, day) {\n  var reminderDocRef;\n  return _regeneratorRuntime.async(function rescheduleReminder$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId);\n          _context7.prev = 1;\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(reminderDocRef, {\n            timestamp: Timestamp.fromDate(day)\n          }));\n\n        case 4:\n          _context7.next = 9;\n          break;\n\n        case 6:\n          _context7.prev = 6;\n          _context7.t0 = _context7[\"catch\"](1);\n          console.log('Error in updating field timestamp in a reminder', _context7.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var deleteMedicationPlan = function deleteMedicationPlan(userId, medicationId) {\n  var medicationDocRef;\n  return _regeneratorRuntime.async(function deleteMedicationPlan$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          medicationDocRef = doc(db, 'users', userId, 'medications', medicationId);\n          _context8.prev = 1;\n          _context8.next = 4;\n          return _regeneratorRuntime.awrap(deleteDoc(medicationDocRef));\n\n        case 4:\n          _context8.next = 9;\n          break;\n\n        case 6:\n          _context8.prev = 6;\n          _context8.t0 = _context8[\"catch\"](1);\n          console.log('Error in deleting a medication plan:', _context8.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var updateReminderQuantity = function updateReminderQuantity(userId, medicationId, reminderId, quantity) {\n  var reminderDocRef;\n  return _regeneratorRuntime.async(function updateReminderQuantity$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId);\n          _context9.prev = 1;\n          _context9.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(reminderDocRef, {\n            quantity: quantity\n          }));\n\n        case 4:\n          _context9.next = 9;\n          break;\n\n        case 6:\n          _context9.prev = 6;\n          _context9.t0 = _context9[\"catch\"](1);\n          console.log('Error in updating field isConfirmed in a reminder:', _context9.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var updateMedication = function updateMedication(userId, medicationId, document) {\n  var medicationDocRef;\n  return _regeneratorRuntime.async(function updateMedication$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          medicationDocRef = doc(db, 'users', userId, 'medications', medicationId);\n          _context10.prev = 1;\n          _context10.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(medicationDocRef, document));\n\n        case 4:\n          _context10.next = 9;\n          break;\n\n        case 6:\n          _context10.prev = 6;\n          _context10.t0 = _context10[\"catch\"](1);\n          console.log('Error in updating medication information:', _context10.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var deleteMedication = function deleteMedication(userId, medicationId) {\n  var remindersDocsRef, remindersDocs, medicationDocRef;\n  return _regeneratorRuntime.async(function deleteMedication$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          remindersDocsRef = collection(db, 'users', userId, 'medications', medicationId, 'reminders');\n          _context11.next = 3;\n          return _regeneratorRuntime.awrap(getDocs(remindersDocsRef));\n\n        case 3:\n          remindersDocs = _context11.sent;\n          remindersDocs.docs.forEach(function (reminder) {\n            return deleteReminder(userId, medicationId, reminder.id);\n          });\n          medicationDocRef = doc(db, 'users', userId, 'medications', medicationId);\n          _context11.prev = 6;\n          _context11.next = 9;\n          return _regeneratorRuntime.awrap(deleteDoc(medicationDocRef));\n\n        case 9:\n          _context11.next = 14;\n          break;\n\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](6);\n          console.log('Error in deleting a medication plan:', _context11.t0.message);\n\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[6, 11]], Promise);\n};\nexport var updateReminder = function updateReminder(userId, medicationId, reminderId, document) {\n  var reminderDocRef;\n  return _regeneratorRuntime.async(function updateReminder$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId);\n          _context12.prev = 1;\n          _context12.next = 4;\n          return _regeneratorRuntime.awrap(updateDoc(reminderDocRef, document));\n\n        case 4:\n          _context12.next = 9;\n          break;\n\n        case 6:\n          _context12.prev = 6;\n          _context12.t0 = _context12[\"catch\"](1);\n          console.log('Error in updating  a reminder:', _context12.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/api/ReminderApi.js"],"names":["collection","deleteDoc","doc","getDoc","getDocs","increment","Timestamp","updateDoc","React","db","drecrementPillsInStock","userId","medicationId","amount","medicationDocRef","medicationDoc","pillsInStock","data","console","log","message","incrementPillsInStock","updatePillsInStock","quantity","confirmReminder","reminderId","reminderDocRef","isConfirmed","reminderDoc","unconfirmReminder","deleteReminder","remindersRef","remindersDocRef","empty","deleteMedicationPlan","size","rescheduleReminder","day","timestamp","fromDate","updateReminderQuantity","updateMedication","document","deleteMedication","remindersDocsRef","remindersDocs","docs","forEach","reminder","id","updateReminder"],"mappings":"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","sourcesContent":["import { collection, deleteDoc, doc, getDoc, getDocs, increment, Timestamp, updateDoc } from '@firebase/firestore'\r\nimport React from 'react'\r\nimport { db } from '../firebase/Config'\r\n\r\nexport const drecrementPillsInStock = async (userId, medicationId, amount) => {\r\n  const medicationDocRef = doc(db, 'users', userId, 'medications', medicationId)\r\n  const medicationDoc = await getDoc(medicationDocRef)\r\n\r\n  try {\r\n    await updateDoc(medicationDocRef,{\r\n      pillsInStock: medicationDoc.data().pillsInStock - amount\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in decremeting field pillsInStock in a medication:', error.message);\r\n  }\r\n}\r\n\r\nexport const incrementPillsInStock = async (userId, medicationId, amount) => {\r\n  const medicationDocRef = doc(db, 'users', userId, 'medications', medicationId)\r\n  const medicationDoc = await getDoc(medicationDocRef)\r\n\r\n  try {\r\n    await updateDoc(medicationDocRef,{\r\n      pillsInStock: medicationDoc.data().pillsInStock + amount\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in decremeting field pillsInStock in a medication:', error.message);\r\n  }\r\n}\r\n\r\nexport const updatePillsInStock = async (userId, medicationId, quantity) => {\r\n  const medicationDocRef = doc(db, 'users', userId, 'medications', medicationId)\r\n  // const medicationDoc = await getDoc(medicationDocRef)\r\n\r\n  try {\r\n    await updateDoc(medicationDocRef,{\r\n      pillsInStock: quantity\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in decremeting field pillsInStock in a medication:', error.message);\r\n  }\r\n}\r\n\r\nexport const confirmReminder = async (userId, medicationId, reminderId) => {\r\n\r\n  // Update field isConfirmed\r\n  const reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId)\r\n  try {\r\n    await updateDoc(reminderDocRef, {\r\n      isConfirmed: true\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in updating field isConfirmed in a reminder:', error.message);\r\n  }\r\n\r\n  const reminderDoc = await getDoc(reminderDocRef)\r\n  drecrementPillsInStock(userId, medicationId, reminderDoc.data().quantity)\r\n}\r\n\r\nexport const unconfirmReminder = async (userId, medicationId, reminderId) => {\r\n\r\n  // Update field isConfirmed\r\n  const reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId)\r\n  \r\n  try {\r\n    await updateDoc(reminderDocRef, {\r\n      isConfirmed: false\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in updating field isConfirmed in a reminder:', error.message);\r\n  }\r\n\r\n  const reminderDoc = await getDoc(reminderDocRef)\r\n  incrementPillsInStock(userId, medicationId, reminderDoc.data().quantity)\r\n}\r\n\r\nexport const deleteReminder =  async (userId, medicationId, reminderId) => {\r\n  const reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId)\r\n\r\n  try {\r\n    await deleteDoc(reminderDocRef)\r\n  } catch (error) {\r\n    console.log('Error in deleteing a reminder:', error.message);\r\n  }\r\n\r\n  const remindersRef = collection(db, 'users', userId, 'medications', medicationId, 'reminders')\r\n  const remindersDocRef = await getDocs(remindersRef)\r\n\r\n  if (remindersDocRef.empty) {\r\n    console.log('No reminder exist in this medication plan');\r\n    deleteMedicationPlan(userId, medicationId)\r\n  } else {\r\n    console.log(remindersDocRef.size);\r\n    console.log('There are some reminders in this medication plan');\r\n  }\r\n\r\n}\r\n\r\nexport const rescheduleReminder = async (userId, medicationId, reminderId, day) => {\r\n  const reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId)\r\n\r\n  try {\r\n    await updateDoc(reminderDocRef, {\r\n      timestamp: Timestamp.fromDate(day)\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in updating field timestamp in a reminder', error.message);\r\n  }\r\n}\r\n\r\nexport const deleteMedicationPlan = async (userId, medicationId) => {\r\n  const medicationDocRef = doc(db, 'users', userId, 'medications', medicationId)\r\n\r\n  try {\r\n    await deleteDoc(medicationDocRef)\r\n  } catch (error) {\r\n    console.log('Error in deleting a medication plan:', error.message);\r\n  }\r\n}\r\n\r\nexport const updateReminderQuantity = async (userId, medicationId, reminderId, quantity) => {\r\n  const reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId)\r\n\r\n  try {\r\n    await updateDoc(reminderDocRef, {\r\n      quantity: quantity\r\n    })\r\n  } catch (error) {\r\n    console.log('Error in updating field isConfirmed in a reminder:', error.message);\r\n  }\r\n\r\n}\r\n\r\nexport const updateMedication = async (userId, medicationId, document) => {\r\n  const medicationDocRef = doc(db, 'users', userId, 'medications', medicationId)\r\n\r\n  try {\r\n    await updateDoc(medicationDocRef, document\r\n    )\r\n  } catch (error) {\r\n    console.log('Error in updating medication information:', error.message);\r\n  }\r\n}\r\n\r\nexport const deleteMedication = async (userId, medicationId) => {\r\n  const remindersDocsRef = collection(db, 'users', userId, 'medications', medicationId, 'reminders')\r\n  const remindersDocs = await getDocs(remindersDocsRef)\r\n\r\n  remindersDocs.docs.forEach(\r\n    reminder => deleteReminder(userId, medicationId, reminder.id)\r\n  )\r\n\r\n  const medicationDocRef = doc(db, 'users', userId, 'medications', medicationId)\r\n\r\n  try {\r\n    await deleteDoc(medicationDocRef)\r\n  } catch (error) {\r\n    console.log('Error in deleting a medication plan:', error.message);\r\n  }\r\n}\r\n\r\nexport const updateReminder = async (userId, medicationId, reminderId, document) => { \r\n  const reminderDocRef = doc(db, 'users', userId, 'medications', medicationId, 'reminders', reminderId)\r\n\r\n  try {\r\n    await updateDoc(reminderDocRef, document)\r\n  } catch (error) {\r\n    console.log('Error in updating  a reminder:', error.message);\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}