{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport pillImg from \"../assets/medicationPill.png\";\nexport default function MedicationItem(_ref) {\n  var reminder = _ref.reminder;\n\n  function addZero(i) {\n    if (i < 10) {\n      i = '0' + i;\n    }\n\n    return i;\n  }\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var medicationId = reminder.id;\n  var medicationName = reminder.name;\n  var reminderId = reminder.reminder.id;\n  var quantity = reminder.reminder.quantity;\n  var time = reminder.reminder.timestamp;\n  return React.createElement(View, null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setOpenModal(!openModal);\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: pillImg,\n    style: {\n      maxWidth: 40,\n      maxHeight: 40\n    }\n  }), React.createElement(View, {\n    style: styles.reminderInf\n  }, React.createElement(View, {\n    style: styles.textContainer\n  }, React.createElement(Text, {\n    style: styles.text\n  }, medicationName), React.createElement(View, {\n    style: styles.timeContainer\n  }, React.createElement(Text, {\n    style: styles.time\n  }, time, \" AM\"))), React.createElement(View, null, React.createElement(Text, {\n    style: styles.quantity\n  }, \"x\", quantity))))), React.createElement(Modal, {\n    visible: openModal,\n    animationType: \"fade\",\n    transparent: true\n  }, React.createElement(View, {\n    style: styles.modal\n  }, React.createElement(View, {\n    style: styles.modalContainer\n  }, React.createElement(View, {\n    style: styles.modalHeader\n  }, React.createElement(Image, {\n    source: pillImg,\n    style: {\n      maxHeight: 80,\n      maxWidth: 80\n    }\n  }), React.createElement(View, {\n    style: [styles.textContainer, {\n      marginLeft: 60,\n      alignItems: 'center'\n    }]\n  }, React.createElement(Text, {\n    style: styles.text\n  }, medicationName), React.createElement(View, {\n    style: styles.timeContainer\n  }, React.createElement(Text, {\n    style: styles.time\n  }, time, \" AM\")))), React.createElement(Text, {\n    style: [styles.modalQuantity, styles.quantity]\n  }, \"x\", quantity), React.createElement(View, {\n    style: styles.buttonsContainer\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.modalButton, {\n      backgroundColor: 'tomato'\n    }],\n    onPress: function onPress() {\n      return setOpenModal(false);\n    }\n  }, React.createElement(Text, null, \"Back\")), React.createElement(TouchableOpacity, {\n    style: [styles.modalButton, {\n      backgroundColor: '#53cbff'\n    }],\n    onPress: function onPress() {\n      return setOpenModal(false);\n    }\n  }, React.createElement(Text, null, \"Confirm\")))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    margin: 20,\n    padding: 15,\n    borderRadius: 20,\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 16\n  },\n  time: {\n    fontSize: 16\n  },\n  reminderInf: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginHorizontal: 20\n  },\n  textContainer: {},\n  text: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  timeContainer: {\n    backgroundColor: '#23AAE3',\n    flexDirection: 'row',\n    padding: 5,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n    width: 80\n  },\n  time: {},\n  quantity: {\n    fontSize: 20\n  },\n  modal: {\n    backgroundColor: 'rgba(52, 52, 52, 0.8)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '80%',\n    height: '30%',\n    backgroundColor: 'white',\n    justifyContent: 'space-between',\n    padding: 10,\n    borderRadius: 20\n  },\n  medicationInfModal: {\n    backgroundColor: 'beige',\n    marginTop: '50%',\n    marginBottom: '50%',\n    height: '50%',\n    marginHorizontal: 40,\n    borderRadius: 10\n  },\n  modalHeader: {\n    flexDirection: 'row'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 10,\n    width: 80,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalQuantity: {\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/components/MedicationItem.js"],"names":["React","useState","pillImg","MedicationItem","reminder","addZero","i","openModal","setOpenModal","medicationId","id","medicationName","name","reminderId","quantity","time","timestamp","styles","container","maxWidth","maxHeight","reminderInf","textContainer","text","timeContainer","modal","modalContainer","modalHeader","marginLeft","alignItems","modalQuantity","buttonsContainer","modalButton","backgroundColor","StyleSheet","create","flexDirection","margin","padding","borderRadius","fontSize","flex","justifyContent","marginHorizontal","fontWeight","marginTop","width","height","medicationInfModal","marginBottom","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, Keyboard, TouchableWithoutFeedback } from 'react-native';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Modal, Button } from 'react-native'\r\nimport pillImg from '../assets/medicationPill.png';\r\n\r\n// function ReminderModal({\r\n//     openModal\r\n\r\n//     setopenModal\r\n\r\n//     name, \r\n//     time, \r\n//     img, \r\n//     quantity}){\r\n//     return (\r\n//         <Modal\r\n//             animationType='fade'\r\n//             transparent={true}\r\n//             visible={openModal\r\n\r\n//             >\r\n//                 <View style={{backgroundColor: 'rgba(52, 52, 52, 0.8)', flex: 1}}>\r\n//                     <View style={styles.medicationInfModal}>\r\n//                         <View>\r\n//                             <Text style={{fontSize: 30}}> {name} </Text>\r\n//                         </View>\r\n\r\n//                         <View style={\r\n//                             {\r\n//                                 marginTop: '80%',\r\n//                                 marginHorizontal: 20,\r\n//                                 flexDirection: 'row',\r\n//                                 justifyContent: 'center',\r\n//                             }\r\n//                         }>\r\n//                             <View style={\r\n//                                 {\r\n//                                     width: 80,\r\n//                                     marginRight: 60\r\n//                                 }\r\n//                             }>\r\n//                                 <Button\r\n//                                     title='Back'\r\n//                                     onPress={() => setopenModal\r\n\r\n//                                 />\r\n//                             </View>\r\n                            \r\n//                             <View style={{\r\n//                                 width: 80\r\n//                             }}>\r\n//                                 <Button\r\n//                                     title='Confirm'\r\n//                                     onPress={() => {\r\n//                                         setopenModal\r\n\r\n//                                     }}\r\n//                                 />\r\n//                             </View>\r\n//                         </View>\r\n\r\n//                     </View>\r\n//                 </View>\r\n//             </Modal>\r\n//     )\r\n// }\r\n\r\nexport default function MedicationItem({\r\n    reminder}) {\r\n    function addZero(i) {\r\n        if (i < 10) {\r\n            i = '0' + i\r\n        }\r\n\r\n        return i\r\n    }\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const medicationId = reminder.id;\r\n    const medicationName = reminder.name;\r\n\r\n    const reminderId = reminder.reminder.id;\r\n    // const image = reminder.reminder.image;\r\n    // const isMissed = reminder.reminder.isMissed;\r\n    // const isTaken = reminder.reminder.isTaken;\r\n    const quantity = reminder.reminder.quantity;\r\n    // const timestamp = reminder.reminder.timestamp.toDate();\r\n\r\n    // const hour = addZero(timestamp.getHours()) + ':' + addZero(timestamp.getMinutes());\r\n\r\n    const time = reminder.reminder.timestamp\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={() => {setOpenModal\r\n\t\t\t\t\t\t\t(!openModal\r\n\t\t\t\t\t\t\t)}}>\r\n                <View style={styles.container}>\r\n                    <Image source={pillImg}\r\n                        style={{maxWidth: 40, maxHeight: 40}}\r\n                    />\r\n                    \r\n                    <View style={styles.reminderInf}>\r\n                        <View style={styles.textContainer}>\r\n                            <Text style={styles.text}>{medicationName}</Text>\r\n\r\n                            <View style={styles.timeContainer}>\r\n                                <Text style={styles.time}>{time} AM</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <Text style={styles.quantity}>x{quantity}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tvisible={openModal}\r\n\t\t\t\t\t\t\tanimationType='fade'\r\n\t\t\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<View style={styles.modal}>\r\n\t\t\t\t\t\t\t\t<View style={styles.modalContainer}>\r\n\t\t\t\t\t\t\t\t\t<View style={styles.modalHeader}>\r\n\t\t\t\t\t\t\t\t\t\t<Image source={pillImg} style={{maxHeight: 80, maxWidth: 80}}/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<View style={[styles.textContainer, {marginLeft: 60, alignItems: 'center'}]}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={styles.text}>{medicationName}</Text>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<View style={styles.timeContainer}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Text style={styles.time}>{time} AM</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t\t\t<Text style={[styles.modalQuantity, styles.quantity]}>x{quantity}</Text>\r\n\r\n\t\t\t\t\t\t\t\t\t<View style={styles.buttonsContainer}>\r\n\t\t\t\t\t\t\t\t\t\t<TouchableOpacity style={[styles.modalButton, {backgroundColor: 'tomato'}]} onPress={() => setOpenModal(false)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text>Back</Text>\r\n\t\t\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t\t\t\t<TouchableOpacity style={[styles.modalButton, {backgroundColor: '#53cbff'}]} onPress={() => setOpenModal(false)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text>Confirm</Text>\r\n\t\t\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</Modal>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        margin: 20,\r\n        padding: 15,\r\n        borderRadius: 20,\r\n        // borderWidth: 2,\r\n        // borderColor: 'tomato',\r\n        // borderStyle: 'solid',\r\n        alignItems:'center',\r\n        // justifyContent: 'space-between'\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n    },\r\n    time: {\r\n        fontSize: 16,\r\n    },\r\n    reminderInf : {\r\n        flexDirection: 'row',\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginHorizontal: 20,\r\n\r\n    },\r\n    textContainer: {\r\n        // backgroundColor: 'gray'\r\n    },\r\n    text : {\r\n        fontSize: 16,\r\n        fontWeight:'bold',\r\n    },\r\n    timeContainer : {\r\n        backgroundColor: '#23AAE3',\r\n        flexDirection: 'row',\r\n        padding: 5,\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 5,\r\n        width: 80\r\n        // backgroundColor: 'yellow'\r\n    },\r\n    time : {\r\n        // flexShrink: 1,\r\n        // flexWrap: 'wrap'\r\n        // backgroundColor: '#23AAE3',\r\n    },\r\n    quantity : {\r\n        fontSize: 20\r\n    },\r\n\r\n\t\tmodal : {\r\n\t\t\tbackgroundColor: 'rgba(52, 52, 52, 0.8)',\r\n\t\t\tflex: 1,\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\tmodalContainer: {\r\n\t\t\twidth: '80%',\r\n\t\t\theight: '30%',\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t\tpadding: 10,\r\n\t\t\tborderRadius: 20\r\n\t\t\t// alignItems: 'center'\r\n\t\t},\r\n\t\tmedicationInfModal: {\r\n\t\t\tbackgroundColor: 'beige',\r\n\t\t\tmarginTop: '50%',\r\n\t\t\tmarginBottom: '50%',\r\n\t\t\theight: '50%',\r\n\t\t\tmarginHorizontal: 40,\r\n\t\t\tborderRadius: 10,\r\n\t},\r\n\tmodalHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\t// flex: 1\r\n\t},\r\n\tbuttonsContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-evenly'\r\n\t},\r\n\tmodalButton: {\r\n\t\tpadding: 10,\r\n\t\tborderRadius: 10,\r\n\t\twidth: 80,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tmodalQuantity : {\r\n\t\talignSelf: 'center'\r\n\t}\r\n})\r\n"]},"metadata":{},"sourceType":"module"}