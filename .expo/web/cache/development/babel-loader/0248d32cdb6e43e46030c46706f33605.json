{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { updatePillsInStock, updateReminder, updateReminderQuantity } from \"../api/ReminderApi\";\nimport pill from \"../assets/medicationPill.png\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { toTimeString } from \"../shared/Functions\";\nexport default function EditReminder(_ref) {\n  var setIsEditing = _ref.setIsEditing,\n      reminder = _ref.reminder;\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser,\n      medications = _useAuth.medications,\n      setMedications = _useAuth.setMedications;\n\n  var medicationName = reminder.name;\n  var timestamp = reminder.timestamp;\n\n  var _useState = useState(reminder.quantity.toString()),\n      _useState2 = _slicedToArray(_useState, 2),\n      quantity = _useState2[0],\n      setQuantity = _useState2[1];\n\n  var _useState3 = useState(reminder.note),\n      _useState4 = _slicedToArray(_useState3, 2),\n      note = _useState4[0],\n      setNote = _useState4[1];\n\n  var handleClickCancel = function handleClickCancel() {\n    setIsEditing(false);\n  };\n\n  var handleClickSave = function handleClickSave() {\n    if (parseInt(quantity) != reminder.quantity || note != reminder.note) {\n      var document = {\n        quantity: parseInt(quantity),\n        note: note\n      };\n      updateReminder(currentUser.uid, reminder.medicationId, reminder.id, document);\n      var medicationDocument = medications.find(function (item) {\n        return item.id == reminder.medicationId;\n      });\n      var reminderIdx = medicationDocument.reminders.findIndex(function (item) {\n        return item.id == reminder.id;\n      });\n      var reminderDoc = medicationDocument.reminders[reminderIdx];\n      medicationDocument.reminders[reminderIdx] = _objectSpread(_objectSpread({}, reminderDoc), document);\n      console.log(medicationDocument);\n      setMedications([].concat(_toConsumableArray(medications.filter(function (item) {\n        return item.id != reminder.medicationId;\n      })), [medicationDocument]));\n      setIsEditing(false);\n    } else setIsEditing(false);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Text, {\n    onPress: handleClickCancel\n  }, \"Cancel\"), React.createElement(Text, null, \"Edit Reminder\"), React.createElement(Text, {\n    onPress: handleClickSave\n  }, \"Save\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      padding: 10\n    }\n  }, React.createElement(Image, {\n    source: pill,\n    style: {\n      height: 80,\n      width: 80\n    }\n  }), React.createElement(View, {\n    style: styles.reminder\n  }, React.createElement(Text, {\n    style: styles.name\n  }, medicationName), React.createElement(Text, null, \"Scheduled for \", toTimeString(timestamp), \", \", timestamp.toDateString()))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: 10\n    }\n  }, React.createElement(Text, null, \"Quantity\"), React.createElement(TextInput, {\n    style: {\n      padding: 5\n    },\n    underlineColorAndroid: 'black',\n    textAlign: \"center\",\n    onChangeText: function onChangeText(text) {\n      return setQuantity(text);\n    },\n    defaultValue: quantity,\n    keyboardType: \"numeric\"\n  })), React.createElement(View, {\n    style: styles.note\n  }, React.createElement(Text, null, \"Notes\"), React.createElement(View, {\n    style: {\n      alignItems: 'flex-start',\n      borderWidth: 1,\n      borderRadius: 10,\n      padding: 10,\n      marginTop: 5\n    }\n  }, React.createElement(TextInput, {\n    defaultValue: note,\n    textAlignVertical: \"top\",\n    onChangeText: function onChangeText(text) {\n      return setNote(text);\n    },\n    multiline: true,\n    numberOfLines: 5,\n    placeholder: \"Write your note here\"\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {},\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 10,\n    backgroundColor: '#53cbff'\n  },\n  name: {\n    fontSize: 20\n  },\n  reminder: {\n    justifyContent: 'space-around',\n    padding: 15\n  },\n  box: {},\n  note: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/components/EditReminder.js"],"names":["React","useState","updatePillsInStock","updateReminder","updateReminderQuantity","pill","useAuth","toTimeString","EditReminder","setIsEditing","reminder","currentUser","medications","setMedications","medicationName","name","timestamp","quantity","toString","setQuantity","note","setNote","handleClickCancel","handleClickSave","parseInt","document","uid","medicationId","id","medicationDocument","find","item","reminderIdx","reminders","findIndex","reminderDoc","console","log","filter","flex","styles","container","header","flexDirection","borderBottomWidth","padding","height","width","toDateString","justifyContent","alignItems","text","borderWidth","borderRadius","marginTop","StyleSheet","create","backgroundColor","fontSize","box"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, SafeAreaView, StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport { updatePillsInStock, updateReminder, updateReminderQuantity } from '../api/ReminderApi'\r\nimport pill from '../assets/medicationPill.png'\r\nimport { useAuth } from '../Context/AuthContext'\r\nimport { toTimeString } from '../shared/Functions'\r\n\r\nexport default function EditReminder({setIsEditing, reminder}) {\r\n  const { currentUser, medications, setMedications } = useAuth()\r\n  \r\n  const medicationName = reminder.name\r\n  const timestamp = reminder.timestamp\r\n\r\n  const [quantity, setQuantity] = useState(reminder.quantity.toString())\r\n  const [note, setNote] = useState(reminder.note)\r\n\r\n  const handleClickCancel = () => {\r\n    setIsEditing(false)\r\n  }\r\n\r\n  // Done\r\n  const handleClickSave = () => {\r\n    if (parseInt(quantity) != reminder.quantity || note != reminder.note) {\r\n      const document = {\r\n        quantity: parseInt(quantity),\r\n        note: note\r\n      }\r\n\r\n      updateReminder(currentUser.uid, reminder.medicationId, reminder.id, document)\r\n\r\n      let medicationDocument = medications.find(item => item.id == reminder.medicationId)\r\n      let reminderIdx = medicationDocument.reminders.findIndex(item => item.id == reminder.id)\r\n      let reminderDoc = medicationDocument.reminders[reminderIdx]\r\n      medicationDocument.reminders[reminderIdx] = {\r\n        ...reminderDoc,\r\n        ...document\r\n      }\r\n\r\n      console.log(medicationDocument);\r\n\r\n      setMedications([...medications.filter(item => item.id != reminder.medicationId), medicationDocument])\r\n      \r\n      setIsEditing(false)\r\n    } else setIsEditing(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text onPress={handleClickCancel}>Cancel</Text>\r\n        <Text>Edit Reminder</Text>\r\n        <Text onPress={handleClickSave}>Save</Text>\r\n      </View>\r\n\r\n        <View style={{flexDirection: 'row', borderBottomWidth: 1, padding: 10}}>\r\n          <Image source={pill} style={{height: 80, width: 80}}/>\r\n\r\n          <View style={styles.reminder}>\r\n            <Text style={styles.name}>{medicationName}</Text>\r\n            <Text>Scheduled for {toTimeString(timestamp)}, {timestamp.toDateString()}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 10}}>\r\n          <Text>Quantity</Text>\r\n          <TextInput\r\n            style={{padding: 5}}\r\n            underlineColorAndroid={'black'}\r\n            textAlign='center'\r\n            onChangeText={text => setQuantity(text)}\r\n            defaultValue={quantity}\r\n            keyboardType='numeric'\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.note}>\r\n          <Text>Notes</Text>\r\n          <View\r\n              style={{alignItems: 'flex-start', borderWidth: 1, borderRadius: 10, padding: 10, marginTop: 5}}\r\n          >\r\n            <TextInput\r\n              defaultValue={note}\r\n              textAlignVertical='top'\r\n              onChangeText={text => setNote(text)}\r\n              multiline={true}\r\n              numberOfLines={5}\r\n              // underlineColorAndroid='black'\r\n              placeholder='Write your note here'\r\n            />\r\n          </View>\r\n        </View>\r\n    </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n    backgroundColor: '#53cbff'\r\n  },\r\n  name: {\r\n    fontSize: 20\r\n  },\r\n  reminder: {\r\n    // alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    padding: 15\r\n  },\r\n  box : {\r\n    \r\n  },\r\n  note: {\r\n    padding: 10,\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}