{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { color } from 'react-native-reanimated';\nimport BarHeader from \"../shared/BarHeader\";\nimport userAvatar from \"../assets/favicon.png\";\nimport ToggleSwitch from 'toggle-switch-react-native';\nimport { doc, getDoc, onSnapshot, setDoc, Timestamp, updateDoc } from '@firebase/firestore';\nimport { useAuth } from \"../Context/AuthContext\";\nimport { db } from \"../firebase/Config\";\nimport { useUser } from \"../Context/UserContext\";\nimport { Picker } from '@react-native-picker/picker';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nexport default function AccountScreen(_ref) {\n  var setOpenAccount = _ref.setOpenAccount,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      saveLoading = _useState4[0],\n      setSaveLoading = _useState4[1];\n\n  var genderRef = useRef();\n\n  function openGenderRef() {\n    genderRef.current.focus();\n  }\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isBirthdayVisible = _useState6[0],\n      setBirthdayVisibility = _useState6[1];\n\n  var handleOpenBirthday = function handleOpenBirthday() {\n    setBirthdayVisibility(true);\n  };\n\n  var handleConfirmBirthday = function handleConfirmBirthday(day) {\n    var firestoreTimestampDay = Timestamp.fromDate(day);\n    setBirthday(day);\n    handleCancelBirthday();\n  };\n\n  var handleCancelBirthday = function handleCancelBirthday() {\n    setBirthdayVisibility(false);\n  };\n\n  var Info = function Info() {\n    var avatar = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var gender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var birthday = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Date();\n    var phoneNumber = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n    var bio = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n\n    _classCallCheck(this, Info);\n\n    this.avatar = avatar;\n    this.name = name;\n    this.gender = gender;\n    this.birthday = birthday;\n    this.phoneNumber = phoneNumber;\n    this.bio = bio;\n  };\n\n  var _useState7 = useState(new Info()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      info = _useState8[0],\n      setInfo = _useState8[1];\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  var handleClickSave = function handleClickSave() {\n    return _regeneratorRuntime.async(function handleClickSave$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setSaveLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(updateDoc(doc(db, 'users', currentUser.uid.toString()), {\n              info: {\n                avatar: avatar,\n                name: name,\n                gender: gender,\n                birthday: Timestamp.fromDate(birthday),\n                phoneNumber: phoneNumber,\n                bio: bio\n              }\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Error in saving profile', _context.t0.message);\n\n          case 9:\n            console.log('Info saved: ', info);\n            setSaveLoading(false);\n            setIsEditing(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    var unsub = onSnapshot(doc(db, 'users', currentUser.uid.toString()), function (doc) {\n      console.log('Current user info data:', doc.data());\n      var userInfo = doc.data().info;\n      console.log('User info at the first time:', userInfo);\n      setInfo(function (prev) {\n        return {\n          avatar: userInfo.avatar,\n          name: userInfo.name,\n          gender: userInfo.gender,\n          birthday: userInfo.birthday.toDate(),\n          phoneNumber: userInfo.phoneNumber,\n          bio: userInfo.bio\n        };\n      });\n      setAvatar(userInfo.avatar);\n      setName(userInfo.name);\n      setGender(userInfo.gender);\n      setBirthday(userInfo.birthday.toDate());\n      setPhoneNumber(userInfo.phoneNumber);\n      setBio(userInfo.bio);\n    });\n  }, []);\n\n  var handleClickEdit = function handleClickEdit() {\n    setIsEditing(true);\n  };\n\n  var handleClickBack = function handleClickBack() {\n    setIsEditing(false);\n  };\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      avatar = _useState10[0],\n      setAvatar = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState('none'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      gender = _useState14[0],\n      setGender = _useState14[1];\n\n  var _useState15 = useState(new Date()),\n      _useState16 = _slicedToArray(_useState15, 2),\n      birthday = _useState16[0],\n      setBirthday = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      phoneNumber = _useState18[0],\n      setPhoneNumber = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      bio = _useState20[0],\n      setBio = _useState20[1];\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(BarHeader, {\n    navigation: navigation,\n    header: isEditing ? 'Edit Profile' : 'Profile'\n  }), React.createElement(Image, {\n    source: userAvatar,\n    style: styles.avatar\n  }), React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, null, React.createElement(View, {\n    style: styles.box\n  }, React.createElement(Text, null, \" Name \"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    editable: isEditing,\n    textAlign: \"right\",\n    placeholder: \"Name\",\n    style: {\n      padding: 5\n    },\n    value: isEditing ? name : info.name\n  })), React.createElement(TouchableOpacity, {\n    style: styles.box,\n    onPress: isEditing ? openGenderRef : function () {}\n  }, React.createElement(Text, null, \"Gender\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(TextInput, {\n    editable: isEditing\n  }, gender), React.createElement(Picker, {\n    style: {\n      width: 50\n    },\n    accessibilityElementsHidden: true,\n    ref: genderRef,\n    onValueChange: function onValueChange(value, idx) {\n      return setGender(value);\n    },\n    selectedValue: isEditing ? gender : info.gender,\n    enabled: isEditing\n  }, React.createElement(Picker.Item, {\n    label: \"Male\",\n    value: \"Male\"\n  }), React.createElement(Picker.Item, {\n    label: \"Female\",\n    value: \"Female\"\n  }), React.createElement(Picker.Item, {\n    label: \"None-binary\",\n    value: \"None-binary\"\n  }), React.createElement(Picker.Item, {\n    label: \"Prefer not to say\",\n    value: \"None\"\n  })))), React.createElement(TouchableOpacity, {\n    style: styles.box,\n    onPress: isEditing ? handleOpenBirthday : function () {}\n  }, React.createElement(Text, null, \"Birth date\"), React.createElement(TextInput, {\n    value: isEditing ? birthday.toDateString() : info.birthday.toDateString(),\n    editable: isEditing,\n    textAlign: \"right\",\n    placeholder: \"Birth date\",\n    style: {\n      padding: 5\n    }\n  }), React.createElement(DateTimePicker, {\n    isVisible: isBirthdayVisible,\n    mode: 'date',\n    onCancel: handleCancelBirthday,\n    onConfirm: handleConfirmBirthday\n  })), React.createElement(View, {\n    style: styles.box\n  }, React.createElement(Text, null, \"Phone number\"), React.createElement(TextInput, {\n    value: isEditing ? phoneNumber : info.phoneNumber,\n    onChangeText: function onChangeText(text) {\n      return setPhoneNumber(text);\n    },\n    editable: isEditing,\n    textAlign: \"right\",\n    placeholder: \"Phone number\",\n    style: {\n      padding: 5\n    }\n  })), React.createElement(View, {\n    style: styles.box\n  }, React.createElement(Text, null, \"Bio\"), React.createElement(TextInput, {\n    value: isEditing ? bio : info.bio,\n    onChangeText: function onChangeText(text) {\n      return setBio(text);\n    },\n    editable: isEditing,\n    textAlign: \"right\",\n    placeholder: \"Bio\",\n    style: {\n      padding: 5\n    }\n  }))), !isEditing ? React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: styles.editButton,\n    onPress: handleClickEdit\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"EDIT\"))) : React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: styles.editButton,\n    onPress: handleClickBack\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"BACK\")), React.createElement(TouchableOpacity, {\n    style: styles.editButton,\n    onPress: handleClickSave\n  }, saveLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"black\"\n  }) : React.createElement(Text, {\n    style: styles.buttonText\n  }, \"SAVE\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 15,\n    justifyContent: 'space-between'\n  },\n  box: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingTop: 10,\n    borderBottomWidth: 1,\n    marginVertical: 5\n  },\n  avatar: {\n    alignSelf: 'center',\n    marginTop: 20,\n    borderRadius: 90,\n    width: 100,\n    height: 100\n  },\n  editButton: {\n    width: '40%',\n    backgroundColor: '#53cbff',\n    alignSelf: 'center',\n    padding: 10,\n    borderRadius: 10,\n    justifyContent: 'center'\n  },\n  buttonText: {\n    alignSelf: 'center',\n    fontSize: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/screens/AccountScreen.js"],"names":["React","useEffect","useRef","useState","TextInput","color","BarHeader","userAvatar","ToggleSwitch","doc","getDoc","onSnapshot","setDoc","Timestamp","updateDoc","useAuth","db","useUser","Picker","DateTimePicker","AccountScreen","setOpenAccount","navigation","isEditing","setIsEditing","saveLoading","setSaveLoading","genderRef","openGenderRef","current","focus","isBirthdayVisible","setBirthdayVisibility","handleOpenBirthday","handleConfirmBirthday","day","firestoreTimestampDay","fromDate","setBirthday","handleCancelBirthday","Info","avatar","name","gender","birthday","Date","phoneNumber","bio","info","setInfo","currentUser","handleClickSave","uid","toString","console","log","message","unsub","data","userInfo","prev","toDate","setAvatar","setName","setGender","setPhoneNumber","setBio","handleClickEdit","handleClickBack","Keyboard","dismiss","flex","styles","container","box","text","padding","flexDirection","justifyContent","alignItems","width","value","idx","toDateString","buttonContainer","editButton","buttonText","StyleSheet","create","paddingTop","borderBottomWidth","marginVertical","alignSelf","marginTop","borderRadius","height","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { StyleSheet, Text, View, Button, Image, TouchableOpacity, TouchableWithoutFeedback, Keyboard, ActivityIndicator } from 'react-native'\r\nimport { TextInput } from 'react-native-gesture-handler'\r\nimport { color } from 'react-native-reanimated'\r\nimport BarHeader from '../shared/BarHeader'\r\nimport userAvatar from '../assets/favicon.png';\r\nimport ToggleSwitch from 'toggle-switch-react-native';\r\nimport { doc, getDoc, onSnapshot, setDoc, Timestamp, updateDoc } from '@firebase/firestore'\r\nimport { useAuth } from '../Context/AuthContext'\r\nimport { db } from '../firebase/Config'\r\nimport { useUser } from '../Context/UserContext'\r\n\r\nimport {Picker} from '@react-native-picker/picker'\r\nimport DateTimePicker from 'react-native-modal-datetime-picker'\r\n\r\nexport default function AccountScreen({setOpenAccount, navigation}) {\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [saveLoading, setSaveLoading] = useState(false)\r\n\r\n    const genderRef = useRef()\r\n\r\n    function openGenderRef() {\r\n        genderRef.current.focus()\r\n    }\r\n\r\n    const [isBirthdayVisible, setBirthdayVisibility] = useState(false)\r\n\r\n    const handleOpenBirthday = () => {\r\n        setBirthdayVisibility(true)\r\n    }\r\n\r\n    const handleConfirmBirthday = (day) => {\r\n        // console.log(day);\r\n        var firestoreTimestampDay = Timestamp.fromDate(day)\r\n        // console.log(x);\r\n        // setNewInfo( prevInfo => ({...prevInfo, birthDate: firestoreTimestampDay}))\r\n        setBirthday(day)\r\n        handleCancelBirthday()\r\n    }\r\n\r\n    const handleCancelBirthday = () => {\r\n        setBirthdayVisibility(false)\r\n    }\r\n\r\n    class Info {\r\n        constructor(avatar = '', name = '', gender = '', birthday =  new Date(), phoneNumber = '', bio = '') {\r\n            this.avatar = avatar\r\n            this.name = name\r\n            this.gender = gender\r\n            this.birthday = birthday\r\n            this.phoneNumber = phoneNumber\r\n            this.bio = bio\r\n        }\r\n    }\r\n\r\n    const [info, setInfo] = useState(new Info())\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    const handleClickSave =  async () => {\r\n\r\n        try {\r\n            setSaveLoading(true)\r\n\r\n            await updateDoc(doc(db, 'users', currentUser.uid.toString()), {\r\n                info: {\r\n                    avatar: avatar,\r\n                    name: name,\r\n                    gender: gender,\r\n                    birthday: Timestamp.fromDate(birthday),\r\n                    phoneNumber: phoneNumber,\r\n                    bio: bio\r\n                }\r\n            })\r\n\r\n        } catch (e) {\r\n            console.log('Error in saving profile', e.message);\r\n        }\r\n\r\n        console.log('Info saved: ', info);\r\n        setSaveLoading(false)\r\n        setIsEditing(false)\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            const unsub = onSnapshot(doc(db, 'users', currentUser.uid.toString()), doc => {\r\n                console.log('Current user info data:', doc.data());\r\n                const userInfo = doc.data().info\r\n\r\n                console.log('User info at the first time:', userInfo);\r\n                \r\n                // Error not loading at the first time but the second time\r\n                setInfo(prev => ({\r\n                    avatar: userInfo.avatar,\r\n                    name: userInfo.name,\r\n                    gender: userInfo.gender,\r\n                    birthday: userInfo.birthday.toDate(),\r\n                    phoneNumber: userInfo.phoneNumber,\r\n                    bio: userInfo.bio\r\n                }))\r\n                \r\n                setAvatar(userInfo.avatar)\r\n                setName(userInfo.name)\r\n                setGender(userInfo.gender)\r\n                setBirthday(userInfo.birthday.toDate())\r\n                setPhoneNumber(userInfo.phoneNumber)\r\n                setBio(userInfo.bio)\r\n            })\r\n\r\n\r\n        }\r\n    , [])\r\n\r\n    const handleClickEdit = () => {\r\n        setIsEditing(true)\r\n        // setNewInfo(info)\r\n    }\r\n\r\n    const handleClickBack = () => {\r\n        setIsEditing(false)\r\n    }\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [name, setName] = useState('') \r\n    const [gender, setGender] = useState('none')\r\n    const [birthday, setBirthday] = useState(new Date())\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [bio, setBio] = useState('')\r\n\r\n    return (\r\n    <TouchableWithoutFeedback\r\n        onPress={() => Keyboard.dismiss()}\r\n    >\r\n        <View style={{flex: 1}}>\r\n            <BarHeader navigation={navigation} header={isEditing ? 'Edit Profile' : 'Profile'}/>\r\n            <Image source={userAvatar} style={styles.avatar} />\r\n\r\n            <View style={styles.container}>\r\n                <View>\r\n                    <View style={styles.box}>\r\n                        <Text> Name </Text>\r\n                        <TextInput \r\n                        onChangeText={text => setName(text)}\r\n                        editable={isEditing}\r\n                        textAlign='right' \r\n                        placeholder='Name' \r\n                        style={{padding: 5}}\r\n                        // value={info.name}\r\n                        // defaultValue={info.name}\r\n                        value={isEditing ? name : info.name}\r\n                        />\r\n                    </View>\r\n\r\n                    <TouchableOpacity \r\n                        style={styles.box}\r\n                        onPress={isEditing ?  openGenderRef : () => {}}\r\n                    >\r\n                        <Text>Gender</Text>\r\n                        <View style={{flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\r\n                            <TextInput\r\n                                editable={isEditing}\r\n                            >\r\n                                {gender}\r\n                            </TextInput>\r\n                            <Picker\r\n                                style={{width: 50}}\r\n                                accessibilityElementsHidden={true}\r\n                                ref={genderRef}\r\n                                onValueChange={(value, idx) => setGender(value)}\r\n                                selectedValue={isEditing ? gender : info.gender}\r\n                                enabled={isEditing}\r\n                                // itemStyle={{fontSize: 26}}\r\n                            >\r\n                                <Picker.Item label='Male' value='Male'/>\r\n                                <Picker.Item label='Female' value='Female'/>\r\n                                <Picker.Item label='None-binary' value='None-binary'/>\r\n                                <Picker.Item label='Prefer not to say' value='None'/>\r\n                            </Picker>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    \r\n                    <TouchableOpacity\r\n                        // disabled={isEditing}\r\n                        style={styles.box}\r\n                        onPress={isEditing ? handleOpenBirthday : () => {}}\r\n                    >\r\n                        <Text>Birth date</Text>\r\n                        <TextInput\r\n                        value={isEditing ? birthday.toDateString() : info.birthday.toDateString()}\r\n                        editable={isEditing}\r\n                        textAlign='right' \r\n                        placeholder='Birth date'\r\n                        style={{padding: 5}}/>\r\n                        <DateTimePicker\r\n                            isVisible={isBirthdayVisible}\r\n                            mode={'date'}\r\n                            onCancel={handleCancelBirthday}\r\n                            onConfirm={handleConfirmBirthday}\r\n                        />\r\n                    </TouchableOpacity>\r\n\r\n                    <View style={styles.box}>\r\n                        <Text>Phone number</Text>\r\n                        <TextInput\r\n                        value={isEditing ? phoneNumber : info.phoneNumber}\r\n                        onChangeText={text => setPhoneNumber(text)}\r\n                        editable={isEditing}\r\n                        textAlign='right'\r\n                        placeholder='Phone number'\r\n                        style={{padding: 5}}/>\r\n                    </View>\r\n\r\n                    <View style={styles.box}>\r\n                        <Text>Bio</Text>\r\n                        <TextInput\r\n                            value={isEditing ? bio : info.bio}\r\n                            onChangeText={text => setBio(text)}\r\n                            editable={isEditing}\r\n                            textAlign='right'\r\n                            placeholder='Bio'\r\n                            style={{padding: 5}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n\r\n                { !isEditing ? \r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity\r\n                        style={styles.editButton}\r\n                        onPress={handleClickEdit}\r\n                        >\r\n                            <Text style={styles.buttonText}>EDIT</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                :\r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity\r\n                        style={styles.editButton}\r\n                        onPress={handleClickBack}\r\n                        >\r\n                            <Text style={styles.buttonText}>BACK</Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity\r\n                        style={styles.editButton}\r\n                        onPress={handleClickSave}\r\n                        >\r\n                            {saveLoading ? <ActivityIndicator size='small' color='black' /> : <Text style={styles.buttonText}>SAVE</Text> }\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    \r\n                }\r\n            </View>\r\n\r\n\r\n        </View>\r\n    </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 15,\r\n        justifyContent: 'space-between',\r\n        // alignItems :'center'\r\n    },\r\n    box: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 10,\r\n        borderBottomWidth: 1,\r\n        marginVertical: 5\r\n        // backgroundColor: 'gray'\r\n    },\r\n    avatar: {\r\n        alignSelf :'center',\r\n        marginTop: 20,\r\n        // backgroundColor: 'gray',\r\n        borderRadius: 90,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    editButton: {\r\n        width: '40%',\r\n        backgroundColor: '#53cbff',\r\n        alignSelf: 'center',\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n        alignSelf: 'center',\r\n        fontSize: 20\r\n    },\r\n    buttonContainer : {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly'\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}