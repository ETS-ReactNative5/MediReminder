{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport pill from \"../assets/medicationPill.png\";\nimport { MaterialIcons, Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Picker } from '@react-native-picker/picker';\nimport { deleteMedication, updateMedication } from \"../api/ReminderApi\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { deleteMedicationFE, toTimeString, updateMedicationFE } from \"../shared/Functions\";\nexport default function MedicationModal(_ref) {\n  var setOpenModal = _ref.setOpenModal,\n      medication = _ref.medication;\n  var lastTaken = medication.reminders.findIndex(function (reminder) {\n    return reminder.isConfirmed == true;\n  });\n  var lastTakenReminder = lastTaken > -1 ? toTimeString(medication.reminders[lastTaken].timestamp) + ', ' + medication.reminders[lastTaken].timestamp.toDateString() : 'None';\n  var nextTaken = medication.reminders.findIndex(function (reminder) {\n    return reminder.isConfirmed == false;\n  });\n  var nextTakenReminder = nextTaken > -1 ? toTimeString(medication.reminders[nextTaken].timestamp) + ', ' + medication.reminders[nextTaken].timestamp.toDateString() : 'Complete';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setEditing = _useState2[1];\n\n  var _useState3 = useState(medication.pillsInStock.toString()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantity = _useState4[0],\n      setQuantity = _useState4[1];\n\n  var _useState5 = useState(medication.refill),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refill = _useState6[0],\n      setRefill = _useState6[1];\n\n  var _useState7 = useState(medication.name),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var refillRef = useRef();\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser,\n      medications = _useAuth.medications,\n      setMedications = _useAuth.setMedications;\n\n  var openRefillRef = function openRefillRef() {\n    refillRef.current.focus();\n  };\n\n  var handleClickSave = function handleClickSave() {\n    if (name == medication.name && parseInt(quantity) == medication.pillsInStock && refill == medication.refill) setEditing(false);\n    var document = {\n      name: name,\n      pillsInStock: quantity != '' ? parseInt(quantity) : 0,\n      refill: refill\n    };\n    updateMedication(currentUser.uid.toString(), medication.id, document);\n    updateMedicationFE(medications, setMedications, medication.id, document);\n    setEditing(false);\n  };\n\n  var handleClickEdit = function handleClickEdit() {\n    setEditing(true);\n  };\n\n  var handleClickDelete = function handleClickDelete() {\n    deleteMedication(currentUser.uid.toString(), medication.id);\n    deleteMedicationFE(medications, setMedications, medication.id);\n    setOpenModal(false);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.headerBar\n  }, React.createElement(MaterialIcons, {\n    name: \"arrow-back\",\n    size: 20,\n    onPress: function onPress() {\n      return setOpenModal(false);\n    }\n  }), React.createElement(Text, null, \"Medication Plan\"), React.createElement(MaterialCommunityIcons, {\n    name: \"trash-can-outline\",\n    size: 20,\n    onPress: handleClickDelete\n  })), React.createElement(View, {\n    style: styles.content\n  }, React.createElement(View, {\n    style: styles.medication\n  }, React.createElement(Image, {\n    source: pill,\n    style: styles.pillImage\n  }), React.createElement(TextInput, {\n    underlineColorAndroid: isEditing ? 'black' : 'transparent',\n    style: {\n      fontWeight: 'bold',\n      padding: 5\n    },\n    editable: isEditing,\n    defaultValue: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    }\n  })), React.createElement(View, {\n    style: styles.reminder\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Last Taken\"), React.createElement(Text, null, lastTakenReminder)), React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Next Reminder\"), React.createElement(Text, null, nextTakenReminder)))), React.createElement(View, {\n    style: styles.inf\n  }, React.createElement(View, {\n    style: styles.field\n  }, React.createElement(Text, null, \"Prescription Refill\"), React.createElement(TextInput, {\n    textAlign: \"center\",\n    underlineColorAndroid: isEditing ? 'black' : 'transparent',\n    keyboardType: \"numeric\",\n    style: {\n      fontWeight: 'bold',\n      padding: 5\n    },\n    editable: isEditing,\n    defaultValue: quantity,\n    onChangeText: function onChangeText(text) {\n      return setQuantity(text);\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: isEditing ? openRefillRef : function () {},\n    style: styles.field\n  }, React.createElement(Text, null, \"Remind Refill\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: isEditing ? 'black' : 'gray',\n      fontWeight: 'bold'\n    }\n  }, refill ? 'Yes' : 'No'), React.createElement(Picker, {\n    enabled: isEditing,\n    mode: \"dropdown\",\n    style: {\n      width: 50\n    },\n    ref: refillRef,\n    onValueChange: function onValueChange(item, idx) {\n      return setRefill(item);\n    },\n    selectedValue: refill\n  }, React.createElement(Picker.Item, {\n    value: true,\n    label: \"Yes\"\n  }), React.createElement(Picker.Item, {\n    value: false,\n    label: \"No\"\n  }))))), React.createElement(View, {\n    style: styles.footer\n  }, React.createElement(TouchableOpacity, {\n    onPress: isEditing ? handleClickSave : handleClickEdit,\n    style: styles.button\n  }, React.createElement(Ionicons, {\n    name: isEditing ? 'save-outline' : 'reload-circle-outline',\n    size: 30,\n    style: styles.buttonIcon\n  }), React.createElement(Text, null, isEditing ? 'Save' : 'Update')))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  headerBar: {\n    backgroundColor: '#53cbff',\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  content: {\n    flexDirection: 'column'\n  },\n  pillImage: {\n    height: 80,\n    width: 80\n  },\n  reminder: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    borderBottomWidth: 1\n  },\n  medication: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10\n  },\n  inf: {\n    padding: 20\n  },\n  field: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 20,\n    alignItems: 'center'\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    backgroundColor: '#53cbff',\n    width: '100%',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center'\n  },\n  buttonIcon: {}\n});","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Máy tính/Projects/MediReminder/components/MedicationModal.js"],"names":["React","useRef","useState","pill","MaterialIcons","Ionicons","MaterialCommunityIcons","Picker","deleteMedication","updateMedication","useAuth","deleteMedicationFE","toTimeString","updateMedicationFE","MedicationModal","setOpenModal","medication","lastTaken","reminders","findIndex","reminder","isConfirmed","lastTakenReminder","timestamp","toDateString","nextTaken","nextTakenReminder","isEditing","setEditing","pillsInStock","toString","quantity","setQuantity","refill","setRefill","name","setName","refillRef","currentUser","medications","setMedications","openRefillRef","current","focus","handleClickSave","parseInt","document","uid","id","handleClickEdit","handleClickDelete","flex","styles","container","headerBar","content","pillImage","fontWeight","padding","text","alignItems","inf","field","flexDirection","color","width","item","idx","footer","button","buttonIcon","StyleSheet","create","backgroundColor","justifyContent","height","borderBottomWidth","marginVertical","position","bottom","left"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Image, StyleSheet, Text, Touchable, View, TouchableOpacity, TextInput, SafeAreaView } from 'react-native'\r\nimport pill from '../assets/medicationPill.png'\r\nimport {MaterialIcons, Ionicons, MaterialCommunityIcons} from '@expo/vector-icons'\r\nimport {Picker} from '@react-native-picker/picker'\r\nimport { deleteMedication, updateMedication } from '../api/ReminderApi'\r\nimport { useAuth } from '../Context/AuthContext'\r\nimport { deleteMedicationFE, toTimeString, updateMedicationFE } from '../shared/Functions'\r\n\r\nexport default function MedicationModal({setOpenModal, medication}) {\r\n\r\n\r\n  const lastTaken = medication.reminders.findIndex(reminder => reminder.isConfirmed == true)\r\n  const lastTakenReminder = lastTaken > -1 ?\r\n  toTimeString(medication.reminders[lastTaken].timestamp)\r\n  + ', '\r\n  + medication.reminders[lastTaken].timestamp.toDateString()\r\n  : 'None'\r\n\r\n  const nextTaken = medication.reminders.findIndex(reminder => reminder.isConfirmed == false)\r\n  const nextTakenReminder = nextTaken > -1 ?\r\n  toTimeString(medication.reminders[nextTaken].timestamp)\r\n  + ', '\r\n  + medication.reminders[nextTaken].timestamp.toDateString()\r\n  : 'Complete'\r\n\r\n  const [isEditing, setEditing] = useState(false)\r\n  \r\n  const [quantity, setQuantity] = useState(medication.pillsInStock.toString())\r\n  const [refill, setRefill] = useState(medication.refill)\r\n  const [name, setName] = useState(medication.name)\r\n  const refillRef = useRef()\r\n  const { currentUser, medications, setMedications } = useAuth()\r\n\r\n  const openRefillRef = () => {\r\n    refillRef.current.focus()\r\n  }\r\n\r\n  const handleClickSave = () => {\r\n    if (name == medication.name\r\n      && parseInt(quantity) == medication.pillsInStock\r\n      && refill == medication.refill) setEditing(false)\r\n\r\n    const document = {\r\n      name: name,\r\n      pillsInStock: quantity != '' ?  parseInt(quantity) : 0,\r\n      refill: refill\r\n    }\r\n    updateMedication(currentUser.uid.toString(), medication.id, document)\r\n\r\n    // const pickedMedication = medications.find( item => item.id == medication.id )\r\n    // setMedications(\r\n    //   prevMedications => [...prevMedications.filter( item => item.id != medication.id), {...pickedMedication, ...document} ]\r\n    // )\r\n\r\n    updateMedicationFE(medications, setMedications, medication.id, document)\r\n    \r\n    setEditing(false)\r\n  }\r\n\r\n  const handleClickEdit = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const handleClickDelete = () => {\r\n    deleteMedication(currentUser.uid.toString(), medication.id)\r\n\r\n    deleteMedicationFE(medications, setMedications, medication.id)\r\n    \r\n    setOpenModal(false)\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.headerBar}>\r\n        <MaterialIcons name='arrow-back' size={20} onPress={() => setOpenModal(false)}/>\r\n        <Text>Medication Plan</Text>\r\n        <MaterialCommunityIcons name='trash-can-outline' size={20} onPress={handleClickDelete}/>\r\n      </View>\r\n\r\n      <View style={styles.content}>\r\n        <View style={styles.medication}>\r\n          <Image source={pill} style={styles.pillImage}/>\r\n          {/* <Text>{medication.name}</Text> */}\r\n          <TextInput\r\n            underlineColorAndroid={isEditing ? 'black' : 'transparent'}\r\n            style={{fontWeight: 'bold', padding: 5}}\r\n            editable={isEditing}\r\n            defaultValue={name}\r\n            onChangeText={text => setName(text)}\r\n          />\r\n        </View>\r\n\r\n\r\n        <View style={styles.reminder}>\r\n          <View style={{alignItems: 'center'}}>\r\n            <Text>Last Taken</Text>\r\n            <Text>{lastTakenReminder}</Text>\r\n          </View>\r\n\r\n          <View style={{alignItems: 'center'}}>\r\n            <Text>Next Reminder</Text>\r\n            <Text>{nextTakenReminder}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.inf}>\r\n        <View style={styles.field}>\r\n          <Text>Prescription Refill</Text>\r\n          <TextInput\r\n            textAlign='center'\r\n            underlineColorAndroid={isEditing ? 'black' : 'transparent'}\r\n            keyboardType='numeric'\r\n            style={{fontWeight: 'bold', padding: 5}}\r\n            editable={isEditing}\r\n            defaultValue={quantity}\r\n            onChangeText={text => setQuantity(text)}\r\n          />\r\n          {/* <Text>{medication.pillsInStock}</Text> */}\r\n        </View>\r\n\r\n        <TouchableOpacity onPress={isEditing ? openRefillRef : () => {}} style={styles.field}>\r\n          <Text>Remind Refill</Text>\r\n          {/* <Text>{medication.refill ? 'Yes' : 'No'}</Text> */}\r\n\r\n          <View style={{flexDirection: 'row', alignItems: 'center'}}>\r\n            <Text style={{color: isEditing ? 'black' : 'gray', fontWeight: 'bold'}}>{refill ? 'Yes' : 'No'}</Text>\r\n\r\n            <Picker\r\n              enabled={isEditing}\r\n              mode='dropdown'\r\n              style={{width: 50}}\r\n              ref={refillRef}\r\n              onValueChange={(item, idx) => setRefill(item)}\r\n              selectedValue={refill}\r\n            >\r\n              <Picker.Item value={true} label='Yes'/>\r\n              <Picker.Item value={false} label='No'/>\r\n            </Picker>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.footer}>\r\n        <TouchableOpacity onPress={isEditing ? handleClickSave : handleClickEdit} style={styles.button}>\r\n          <Ionicons name={isEditing ? 'save-outline' : 'reload-circle-outline'} size={30} style={styles.buttonIcon} />\r\n          <Text>{isEditing ? 'Save' : 'Update'}</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* <TouchableOpacity onPress={handleClickDelete} style={styles.button}>\r\n          <MaterialCommunityIcons name='trash-can-outline' size={30} style={styles.buttonIcon}/>\r\n          <Text>Delete</Text>\r\n        </TouchableOpacity> */}\r\n      </View>\r\n    </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  headerBar: {\r\n    backgroundColor: '#53cbff',\r\n    padding: 10,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  content: {\r\n    flexDirection: 'column',\r\n    // padding: 10\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  pillImage: {\r\n    height: 80,\r\n    width: 80\r\n  },\r\n  reminder : {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    // backgroundColor: '#53cbff'\r\n    // flex: 1\r\n  },\r\n  medication: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    // backgroundColor: '#53cbff'\r\n  },\r\n  inf : {\r\n    padding: 20\r\n  },\r\n  field: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 20,\r\n    alignItems: 'center'\r\n  },\r\n  footer: {\r\n    position:'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    backgroundColor: '#53cbff',\r\n    // flex: 1,\r\n    width: '100%',\r\n    padding: 10\r\n  },\r\n  button: {\r\n    alignItems: 'center'\r\n  },\r\n  buttonIcon: {\r\n    \r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}